{"message":null,"query_stack":null}
{"message":"1:1 error: internal compiler error: Encountered errors `[FulfillmentError(Obligation(predicate=Binder(TraitPredicate(TraitRef(isize, Array))),depth=0),Unimplemented)]` fulfilling during trans","query_stack":null}
{"message":"AssocItem { def_id: DefId(168:66 ~ web[c7a2]::get_index::{closure#0}::Render::__maud_render_to), ident: __maud_render_to#10509, kind: Fn, vis: Restricted(DefId(168:0 ~ web[c7a2])), defaultness: Default { has_value: true }, container: TraitContainer(DefId(168:65 ~ web[c7a2]::get_index::{closure#0}::Render)), fn_has_self_parameter: true } not found in DefId(168:67 ~ web[c7a2]::get_index::{closure#0}::{impl#0})\r","query_stack":null}
{"message":"AssocItem { def_id: DefId(223:1904 ~ polargrid_server_shared[5de3]::models[0]::credit_change[0]::CreditTrait[0]::to_markup_estimated[0]::Render[0]::__maud_render_to[0]), ident: __maud_render_to#2959, kind: Fn, vis: Restricted(DefId(223:136 ~ polargrid_server_shared[5de3]::models[0]::credit_change[0])), defaultness: Default { has_value: true }, container: TraitContainer(DefId(223:1903 ~ polargrid_server_shared[5de3]::models[0]::credit_change[0]::CreditTrait[0]::to_markup_estimated[0]::Render[0])), fn_has_self_parameter: true } not found in DefId(223:1905 ~ polargrid_server_shared[5de3]::models[0]::credit_change[0]::CreditTrait[0]::to_markup_estimated[0]::{{impl}}[0])\r","query_stack":null}
{"message":"BoundRegion { var: 0, kind: BrNamed(DefId(0:9 ~ rust_bug[3fc9]::or::'a), 'a) } is a region but value is Type(_)\r","query_stack":null}
{"message":"Broken MIR: generator contains type &mut Body in MIR, but typeck only knows about {ResumeTy, &HttpClient, std::time::Duration, HttpClient, &Client<HttpConnector>, Client<HttpConnector>, Request<Body>, tokio::time::Timeout<hyper::client::ResponseFuture>, (), Result<Result<Response<Body>, hyper::Error>, Elapsed>, Response<Body>, Vec<u8>, Next<Body>} and [&request::HttpClient, hyper::Request<hyper::Body>, std::time::Duration]\r","query_stack":null}
{"message":"Broken MIR: generator contains type &mut either::Either<TempPath, PathBuf> in MIR, but typeck only knows about {ResumeTy, &mut temp_file::TempFile, P, PathBuf, either::Either<TempPath, PathBuf>, TempPath, tokio::task::JoinHandle<std::result::Result<(), PathPersistError>>, (), &PathBuf, impl futures::Future<Output = std::result::Result<(), std::io::Error>>, &mut &str, impl futures::Future<Output = std::result::Result<tokio::fs::File, std::io::Error>>, tokio::fs::File, &str, &[u8], tokio::io::util::write_all::WriteAll<tokio::fs::File>} and [&mut fs::temp_file::TempFile, P]\r","query_stack":null}
{"message":"Broken MIR: generator contains type &mut tokio::sync::MutexGuard<LruCache<u64, bytes::Bytes>> in MIR, but typeck only knows about {ResumeTy, DefaultHasher, u64, &tokio::sync::Mutex<LruCache<u64, bytes::Bytes>>, Arc<tokio::sync::Mutex<LruCache<u64, bytes::Bytes>>>, impl Future<Output = tokio::sync::MutexGuard<LruCache<u64, bytes::Bytes>>>, (), tokio::sync::MutexGuard<LruCache<u64, bytes::Bytes>>, &u64, std::option::Option<&bytes::Bytes>, &str, impl Future<Output = Result<reqwest::Response, reqwest::Error>>, reqwest::Response, impl Future<Output = Result<bytes::Bytes, reqwest::Error>>} and [&str, std::sync::Arc<tokio::sync::Mutex<lru::LruCache<u64, bytes::Bytes>>>]\r","query_stack":null}
{"message":"Broken MIR: generator contains type &rocket::http::Cookie in MIR, but typeck only knows about for<'r, 's, 't0, 't1, 't2, 't3, 't4, 't5, 't6> {std::future::ResumeTy, &'r rocket::Request<'s>, rocket::http::Cookies<'t0>, &'t1 mut rocket::http::Cookies<'t2>, &'t3 str, std::option::Option<rocket::http::Cookie<'t4>>, rocket::http::Cookie<'t5>, std::pin::Pin<std::boxed::Box<(dyn std::future::Future<Output = rocket::outcome::Outcome<rocket_airlock::Airlock<hatch::SimpleHatch>, (rocket::http::Status, ()), ()>> + std::marker::Send + 't6)>>, ()}\r","query_stack":null}
{"message":"Broken MIR: generator contains type &u32 in MIR, but typeck only knows about for<'r, 's, 't0> {ResumeTy, Status, u32, &'r tokio::sync::RwLock<Vec<bool>>, tokio::sync::RwLock<Vec<bool>>, impl std::future::Future, ()}\r","query_stack":null}
{"message":"Broken MIR: generator contains type &u32 in MIR, but typeck only knows about {ResumeTy, u32, impl Future<Output = usize>, (), Foo, impl Future<Output = ()>} and []\r","query_stack":null}
{"message":"Broken MIR: generator contains type (u64, bool) in MIR, but typeck only knows about for<'r, 's, 't0, 't1, 't2, 't3, 't4, 't5, 't6> {std::future::ResumeTy, &'r mut State, u64, State, &'s tokio::sync::rwlock::RwLock<u64>, tokio::sync::rwlock::RwLock<u64>, impl std::future::Future, (), &'t2 tokio::sync::rwlock::RwLockReadGuard<'t3, u64>, tokio::sync::rwlock::RwLockReadGuard<'t4, u64>, impl std::future::Future}\r","query_stack":null}
{"message":"Broken MIR: generator contains type B in MIR, but typeck only knows about {ResumeTy, &mut File<B>, impl Future<Output = ()>, (), impl Future<Output = ()>, impl Future<Output = ()>, impl Future<Output = ()>, impl Future<Output = &&mut File<B>>, &&mut File<B>, File<B>, impl Future<Output = &mut B>} and [&mut File<B>]","query_stack":null}
{"message":"Broken MIR: generator contains type ClientOptionsParser in MIR, but typeck only\r","query_stack":null}
{"message":"Broken MIR: generator contains type Config in MIR, but typeck only knows about {ResumeTy, impl Future<Output = ()>, ()} and []\r","query_stack":null}
{"message":"Broken MIR: generator contains type Pin<Box<dyn Future<Output = std::result::Result<(), std::io::Error>> + Send>> in MIR, but typeck only knows about for<'r, 's, 't0> {ResumeTy, &'r F, Request<State>, Next<'s, State>, Pin<Box<(dyn Future<Output = std::result::Result<(), std::io::Error>> + Send + 't0)>>, ()}\r","query_stack":null}
{"message":"Broken MIR: generator contains type Pin<Box<dyn std::future::Future<Output = std::result::Result<response::Response, http_types::Error>> + std::marker::Send>> in MIR, but typeck only knows about for<'r, 's, 't0> {ResumeTy, &'r F, request::Request<State>, middleware::Next<'s, State>, Pin<Box<(dyn std::future::Future<Output = std::result::Result<response::Response, http_types::Error>> + std::marker::Send + 't0)>>, ()}\r","query_stack":null}
{"message":"Broken MIR: generator contains type TestExtractor<TestEnum::TWO> in MIR, but typeck only knows about {ResumeTy, TestExtractor<{TestEnum::TWO}>, impl futures::Future, ()} and [TestExtractor<{TestEnum::TWO}>]\r","query_stack":null}
{"message":"Broken MIR: generator contains type Vec<[u8; 16]> in MIR, but typeck only knows about {ResumeTy, Vec<[u8; _]>, &[[u8; _]], &Vec<[u8; _]>, impl Future, ()} and []\r","query_stack":null}
{"message":"Broken MIR: generator contains type [&std::option::Option<&str>, &std::option::Option<&str>] in MIR, but typeck only knows about {ResumeTy, hyper::Request<B>, &S, bool, &S, Pin<Box<dyn std::future::Future<Output = std::result::Result<T, <T as FromRequest<S, B>>::Rejection>> + Send>>, Pin<Box<dyn std::future::Future<Output = std::result::Result<T, <T as FromRequest<S, B>>::Rejection>> + Send>>, (), tracing::Span, &mut RelayClient, RelayClient, impl std::future::Future<Output = std::result::Result<PublicKey, error::Error>>, PublicKey, axum::http::request::Parts, B, impl std::future::Future<Output = std::result::Result<axum::body::Bytes, <B as HttpBody>::Error>>, axum::body::Bytes, Cow<'_, str>, std::option::Option<&str>, (std::option::Option<&str>, std::option::Option<&str>), &str, &&str, &Cow<'_, str>, &PublicKey, impl std::future::Future<Output = std::result::Result<bool, error::Error>>, &S, Pin<Box<dyn std::future::Future<Output = std::result::Result<T, <T as FromRequest<S, B>>::Rejection>> + Send>>} and [hyper::Request<B>, &S]\r","query_stack":null}
{"message":"Broken MIR: generator contains type [&std::option::Option<StructB>] in MIR, but typeck only knows about {ResumeTy, StructB, Option<StructB>, &StructB, impl Future<Output = StructA>, ()} and []\r","query_stack":null}
{"message":"Broken MIR: generator contains type [closure@src/agent/agent_test.rs:1817:9: 1829:10] in MIR, but typeck only knows about for<'r, 's, 't0, 't1, 't2, 't3, 't4, 't5, 't6, 't7, 't8, 't9, 't10, 't11, 't12, 't13, 't14, 't15, 't16> {ResumeTy, std::time::Duration, [closure@src/agent/agent_test.rs:1817:9: 1829:10], &'s std::time::Duration, Option<std::time::Duration>, agent_config::AgentConfig, Option<agent_config::AgentConfig>, impl std::future::Future, (), std::sync::Arc<agent::Agent>, &'t0 [closure@src/agent/agent_test.rs:1817:9: 1829:10], &'t2 agent::Agent, impl std::future::Future, String, Box<(dyn FnMut(state::ConnectionState) + Send + Sync + 't4)>, tokio::sync::mpsc::Receiver<()>, impl std::future::Future, &'t6 str, impl std::future::Future, impl std::future::Future, impl std::future::Future, &'t10 std::sync::Arc<agent::Agent>, impl std::future::Future, &'t13 mut tokio::sync::mpsc::Receiver<()>, impl std::future::Future, &'t15 String, impl std::future::Future}\r","query_stack":null}
{"message":"Broken MIR: generator contains type [u8; 8] in MIR, but typeck only knows about {ResumeTy, &mut Snow<T>, O, Vec<u8>, usize, Snow<T>, &mut T, T, &Vec<u8>, u64, [u8; _], &[u8], &[u8; _], async_std::io::write::write::WriteFuture<T>, (), async_std::io::write::flush::FlushFuture<T>} and [&mut async_snow::Snow<T>, O]\r","query_stack":null}
{"message":"Broken MIR: generator contains type app::App in MIR, but typeck only knows about {ResumeTy, ObjectList<NodeMetrics>, tokio::sync::Mutex<app::App>, &tokio::sync::Mutex<app::App>, impl Future<Output = tokio::sync::MutexGuard<app::App>>, ()} and []\r","query_stack":null}
{"message":"Broken MIR: generator contains type http::uri::Parts in MIR, but typeck only knows about {ResumeTy, &mut client::grpc::Grpc<T>, C, http::Request<UnsyncBoxBody<bytes::Bytes, Status>>, client::grpc::Grpc<T>, <T as GrpcService<UnsyncBoxBody<bytes::Bytes, Status>>>::Future, ()} and [&mut client::grpc::Grpc<T>, request::Request<S>, http::uri::PathAndQuery, C]\r","query_stack":null}
{"message":"Broken MIR: generator contains type http::uri::Parts in MIR, but typeck only knows about {ResumeTy, &mut client::grpc::Grpc<T>, request::Request<S>, C, http::Request<body::BoxBody>, client::grpc::Grpc<T>, <T as GrpcService<body::BoxBody>>::Future, ()} and [&mut client::grpc::Grpc<T>, request::Request<S>, http::uri::PathAndQuery, C]\r","query_stack":null}
{"message":"Broken MIR: generator contains type rustls::ClientConfig in MIR, but typeck only knows about {ResumeTy, Url, std::net::SocketAddr, RootCertStore, Endpoint, String, std::time::Instant, bool, &str, &Endpoint, ControlFlow<Result<Infallible, ConnectError>, Connecting>, Connecting, (), NewConnection, quinn::Connection, &quinn::Connection, OpenBi, SendStream, RecvStream, &String, &[u8], quinn::send_stream::WriteAll, quinn::send_stream::Finish, usize, ReadToEnd, Vec<u8>, Duration, impl Future<Output = ()>} and [&bool, url::Url, &std::option::Option<std::string::String>, std::option::Option<std::path::PathBuf>, &bool]\r","query_stack":null}
{"message":"Broken MIR: generator contains type std::string::String in MIR, but typeck only knows about {std::future::ResumeTy, impl std::future::Future, ()}\r","query_stack":null}
{"message":"Broken MIR: generator contains type std::vec::Vec<[u8; _]> in MIR, but typeck only knows about for<'r, 's, 't0, 't1> {std::future::ResumeTy, &'r Foo<H>, std::vec::Vec<[u8; _]>, &'s [[u8; _]], &'t0 std::vec::Vec<[u8; _]>, impl std::future::Future, ()}\r","query_stack":null}
{"message":"Broken MIR: generator contains type tokio::sync::oneshot::Sender<HashMap<OperationId, OperationSearchResult, BuildHasherDefault<HHasher<OperationId>>>> in MIR, but typeck only knows about {ResumeTy, &mut ConsensusWorker, ConsensusCommand, HashSet<OperationId, BuildHasherDefault<HHasher<OperationId>>>, &HashSet<OperationId, BuildHasherDefault<HHasher<OperationId>>>, impl Future<Output = HashMap<OperationId, OperationSearchResult, BuildHasherDefault<HHasher<OperationId>>>>, (), Vec<PrivateKey>, &ConsensusWorker, impl Future<Output = ()>, HashSet<massa_models::Address, BuildHasherDefault<HHasher<massa_models::Address>>>} and [&mut consensus_worker::ConsensusWorker, consensus_worker::ConsensusCommand]\r","query_stack":null}
{"message":"DefPathBasedNames: trying to create type name for unexpected type: for<'r, 's, 't0, 't1, 't2, 't3, 't4> {rustc_data_structures::box_region::Action, &'r std::rc::Rc<rustc_session::Session>, std::rc::Rc<rustc_session::Session>, rustc_session::Session, &'s rustc_session::Session, rustc_resolve::ResolverArenas<'t0>, std::result::Result<(rustc_ast::Crate, rustc_resolve::Resolver<'t1>), rustc_errors::ErrorReported>, rustc_errors::ErrorReported, std::result::Result<rustc_ast::Crate, rustc_errors::ErrorReported>, rustc_data_structures::box_region::YieldType<std::result::Result<rustc_ast::Crate, rustc_errors::ErrorReported>, for<'t5, 't6> fn((&'t5 mut rustc_resolve::Resolver<'t6>,))>, rustc_ast::Crate, rustc_resolve::Resolver<'t2>, rustc_data_structures::box_region::AccessAction, &'t3 mut (dyn for<'t5, 't6> std::ops::FnMut(&'t5 mut rustc_resolve::Resolver<'t6>) + 't4), rustc_data_structures::box_region::Marker<for<'t5, 't6> fn((&'t5 mut rustc_resolve::Resolver<'t6>,))>}\r","query_stack":null}
{"message":"Deref of by-Ref operand OperandRef(Ref((%\"alloc::boxed::Box<[u64], &virtual_memory::LazyWrp<spin::mutex::Mutex<virtual_m)\r","query_stack":null}
{"message":"Deref of by-Ref operand OperandRef(Ref((%\"alloc::boxed::Box<core::mem::maybe_uninit::MaybeUninit<i32>, AwfulAllocator<128_usize>>\"*:  %10 = alloca %\"alloc::boxed::Box<core::mem::maybe_uninit::MaybeUninit<i32>, AwfulAllocator<128_usize>>\", align 8), None, Align { pow2: 3 }) @ TyAndLayout { ty: std::boxed::Box<std::mem::MaybeUninit<i32>, AwfulAllocator<128_usize>>, layout: Layout { fields: Arbitrary { offsets: [Size { raw: 0 }, Size { raw: 8 }], memory_index: [0, 1] }, variants: Single { index: 0 }, abi: Aggregate { sized: true }, largest_niche: Some(Niche { offset: Size { raw: 0 }, scalar: Scalar { value: Pointer, valid_range: 1..=18446744073709551615 } }), align: AbiAndPrefAlign { abi: Align { pow2: 3 }, pref: Align { pow2: 3 } }, size: Size { raw: 1032 } } })\r","query_stack":null}
{"message":"Deref of by-Ref operand OperandRef(Ref((%\"std::boxed::Box<[std::mem::MaybeUninit<usize>], &std::alloc::Global>\"*:  %6 = alloca %\"std::boxed::Box<[std::mem::MaybeUninit<usize>], &std::alloc::Global>\", align 8), None, Align { pow2: 3 \r","query_stack":null}
{"message":"Deref of by-Ref operand OperandRef(Ref((%\"std::boxed::Box<std::mem::MaybeUninit<i32>, InlineAlloc>\"*:  %10 = alloca %\"std::boxed::Box<std::mem::MaybeUninit<i32>, InlineAlloc>\", align 8), None, Align { pow2: 3 }) @ TyAndLayout { ty: std::boxed::Box<std::mem::MaybeUninit<i32>, InlineAlloc>, layout: Layout { fields: Arbitrary { offsets: [Size { raw: 0 }, Size { raw: 8 }], memory_index: [0, 1] }, variants: Single { index: 0 }, abi: Aggregate { sized: true }, largest_niche: Some(Niche { offset: Size { raw: 0 }, scalar: Scalar { value: Pointer, valid_range: 1..=18446744073709551615 } }), align: AbiAndPrefAlign { abi: Align { pow2: 3 }, pref: Align { pow2: 3 } }, size: Size { raw: 40 } } })\r","query_stack":null}
{"message":"Drop location span error: need to handle more Node ImplItem(ImplItem { ident: create#0, def_id: DefId(0:5 ~ dir_builder[6e27]::{impl#0}::create), vis: Spanned { node: Inherited, span: ./src/github.com-1ecc6299db9ec823/tokio-1.15.0/src/fs/dir_builder.rs:4:5: 4:5 (#0) }, defaultness: Final, generics: Generics { params: [GenericParam { hir_id: HirId { owner: DefId(0:5 ~ dir_builder[6e27]::{impl#0}::create), local_id: 28 }, name: Plain(impl AsRef<std::path::Path>#0), bounds: [Trait(PolyTraitRef { bound_generic_params: [], trait_ref: TraitRef { path: Path { span: ./src/github.com-1ecc6299db9ec823/tokio-1.15.0/src/fs/dir_builder.rs:4:32: 4:54 (#0), res: Def(Trait, DefId(2:2908 ~ core[3f36]::convert::AsRef)), segments: [PathSegment { ident: AsRef#0, hir_id: Some(HirId { owner: DefId(0:5 ~ dir_builder[6e27]::{impl#0}::create), local_id: 26 }), res: Some(Def(Trait, DefId(2:2908 ~ core[3f36]::convert::AsRef))), args: Some(GenericArgs { args: [Type(Ty { hir_id: HirId { owner: DefId(0:5 ~ dir_builder[6e27]::{impl#0}::create), local_id: 22 }, kind: Path(Resolved(None, Path { span: ./src/github.com-1ecc6299db9ec823/tokio-1.15.0/src/fs/dir_builder.rs:4:38: 4:53 (#0), res: Def(Struct, DefId(1:7232 ~ std[fc96]::path::Path)), segments: [PathSegment { ident: std#0, hir_id: Some(HirId { owner: DefId(0:5 ~ dir_builder[6e27]::{impl#0}::create), local_id: 23 }), res: Some(Def(Mod, DefId(1:0 ~ std[fc96]))), args: None, infer_args: false }, PathSegment { ident: path#0, hir_id: Some(HirId { owner: DefId(0:5 ~ dir_builder[6e27]::{impl#0}::create), local_id: 24 }), res: Some(Def(Mod, DefId(1:6925 ~ std[fc96]::path))), args: None, infer_args: false }, PathSegment { ident: Path#0, hir_id: Some(HirId { owner: DefId(0:5 ~ dir_builder[6e27]::{impl#0}::create), local_id: 25 }), res: Some(Err), args: None, infer_args: false }] })), span: ./src/github.com-1ecc6299db9ec823/tokio-1.15.0/src/fs/dir_builder.rs:4:38: 4:53 (#0) })], bindings: [], parenthesized: false, span_ext: ./src/github.com-1ecc6299db9ec823/tokio-1.15.0/src/fs/dir_builder.rs:4:37: 4:54 (#0) }), infer_args: false }] }, hir_ref_id: HirId { owner: DefId(0:5 ~ dir_builder[6e27]::{impl#0}::create), local_id: 27 } }, span: ./src/github.com-1ecc6299db9ec823/tokio-1.15.0/src/fs/dir_builder.rs:4:32: 4:54 (#0) }, None)], span: ./src/github.com-1ecc6299db9ec823/tokio-1.15.0/src/fs/dir_builder.rs:4:27: 4:54 (#0), pure_wrt_drop: false, kind: Type { default: None, synthetic: true } }], where_clause: WhereClause { predicates: [], span: ./src/github.com-1ecc6299db9ec823/tokio-1.15.0/src/fs/dir_builder.rs:4:55: 4:55 (#0) }, span: ./src/github.com-1ecc6299db9ec823/tokio-1.15.0/src/fs/dir_builder.rs:4:20: 4:20 (#0) }, kind: Fn(FnSig { header: FnHeader { unsafety: Normal, constness: NotConst, asyncness: Async, abi: Rust }, decl: FnDecl { inputs: [Ty { hir_id: HirId { owner: DefId(0:5 ~ dir_builder[6e27]::{impl#0}::create), local_id: 29 }, kind: Path(Resolved(None, Path { span: ./src/github.com-1ecc6299db9ec823/tokio-1.15.0/src/fs/dir_builder.rs:4:27: 4:54 (#0), res: Def(TyParam, DefId(0:7 ~ dir_builder[6e27]::{impl#0}::create::{opaque#1})), segments: [PathSegment { ident: impl AsRef<std::path::Path>#0, hir_id: None, res: None, args: None, infer_args: true }] })), span: ./src/github.com-1ecc6299db9ec823/tokio-1.15.0/src/fs/dir_builder.rs:4:27: 4:54 (#0) }], output: Return(Ty { hir_id: HirId { owner: DefId(0:5 ~ dir_builder[6e27]::{impl#0}::create), local_id: 30 }, kind: OpaqueDef(ItemId { def_id: DefId(0:6 ~ dir_builder[6e27]::{impl#0}::create::{opaque#0}) }, []), span: ./src/github.com-1ecc6299db9ec823/tokio-1.15.0/src/fs/dir_builder.rs:4:57: 4:57 (#6) }), c_variadic: false, implicit_self: None }, span: ./src/github.com-1ecc6299db9ec823/tokio-1.15.0/src/fs/dir_builder.rs:4:5: 4:55 (#0) }, BodyId { hir_id: HirId { owner: DefId(0:5 ~ dir_builder[6e27]::{impl#0}::create), local_id: 21 } }), span: ./src/github.com-1ecc6299db9ec823/tokio-1.15.0/src/fs/dir_builder.rs:4:5: 7:6 (#0) })\r","query_stack":null}
{"message":"Drop location span error: need to handle more Node ImplItem(ImplItem { ident: new#0, def_id: DefId(0:19 ~ ice_repro[15e6]::{impl#0}::new), vis: Spanned { node: Crate(PubCrate), span: src/main.rs:16:5: 16:15 (#0) }, defaultness: Final, generics: Generics { params: [], where_clause: WhereClause { predicates: [], span: src/main.rs:20:44: 20:44 (#0) }, span: src/main.rs:16:28: 16:28 (#0) }, kind: Fn(FnSig { header: FnHeader { unsafety: Normal, constness: NotConst, asyncness: Async, abi: Rust }, decl: FnDecl { inputs: [Ty { hir_id: HirId { owner: DefId(0:19 ~ ice_repro[15e6]::{impl#0}::new), local_id: 74 }, kind: Path(Resolved(None, Path { span: src/main.rs:17:15: 17:19 (#0), res: Err, segments: [PathSegment { ident: Line#0, hir_id: Some(HirId { owner: DefId(0:19 ~ ice_repro[15e6]::{impl#0}::new), local_id: 75 }), res: Some(Err), args: None, infer_args: false }] })), span: src/main.rs:17:15: 17:19 (#0) }, Ty { hir_id: HirId { owner: DefId(0:19 ~ ice_repro[15e6]::{impl#0}::new), local_id: 76 }, kind: Path(Resolved(None, Path { span: src/main.rs:18:19: 18:27 (#0), res: Def(Struct, DefId(2:47686 ~ core[4b8c]::time::Duration)), segments: [PathSegment { ident: Duration#0, hir_id: Some(HirId { owner: DefId(0:19 ~ ice_repro[15e6]::{impl#0}::new), local_id: 77 }), res: Some(Err), args: None, infer_args: false }] })), span: src/main.rs:18:19: 18:27 (#0) }, Ty { hir_id: HirId { owner: DefId(0:19 ~ ice_repro[15e6]::{impl#0}::new), local_id: 78 }, kind: Path(Resolved(None, Path { span: src/main.rs:19:15: 19:18 (#0), res: PrimTy(Uint(U32)), segments: [PathSegment { ident: u32#0, hir_id: Some(HirId { owner: DefId(0:19 ~ ice_repro[15e6]::{impl#0}::new), local_id: 79 }), res: Some(Err), args: None, infer_args: false }] })), span: src/main.rs:19:15: 19:18 (#0) }], output: Return(Ty { hir_id: HirId { owner: DefId(0:19 ~ ice_repro[15e6]::{impl#0}::new), local_id: 80 }, kind: OpaqueDef(ItemId { def_id: DefId(0:20 ~ ice_repro[15e6]::{impl#0}::new::{opaque#0}) }, []), span: src/main.rs:20:10: 20:44 (#86) }), c_variadic: false, implicit_self: None }, span: src/main.rs:16:5: 20:44 (#0) }, BodyId { hir_id: HirId { owner: DefId(0:19 ~ ice_repro[15e6]::{impl#0}::new), local_id: 73 } }), span: src/main.rs:16:5: 31:6 (#0) })\r","query_stack":null}
{"message":"Encountered error `OutputTypeParameterMismatch(Binder(<[closure@./72793.rs:21:19: 21:25] as std::ops::Fn<(impl for<'r> T,)>>, [Region(BrAnon(0))]), Binder(<[closure@./72793.rs:21:19: 21:25] as std::ops::Fn<(&S,)>>, []), Sorts(ExpectedFound { expected: &S, found: impl T }))` selecting `Binder(<[closure@./72793.rs:21:19: 21:25] as std::ops::Fn<(&S,)>>, [])` during codegen\r","query_stack":null}
{"message":"Encountered error `OutputTypeParameterMismatch(Binder(<[closure@./src/test/ui/issues/issue-44005.rs:22:19: 22:27] as std::ops::Fn<(<&i32 as Foo<'_>>::Bar,)>>), Binder(<[closure@./src/test/ui/issues/issue-44005.rs:22:19: 22:27] as std::ops::Fn<(&i32,)>>), Sorts(ExpectedFound { expected: &i32, found: <&i32 as Foo<'_>>::Bar }))` selecting `Binder(<[closure@./src/test/ui/issues/issue-44005.rs:22:19: 22:27] as std::ops::Fn<(&i32,)>>)` during codegen\r","query_stack":null}
{"message":"Encountered error `OutputTypeParameterMismatch(Binder(<[closure@crates/ice/src/lib.rs:47:36: 47:46] as std::ops::FnOnce<(<ARef as Fetch<'_, '_>>::Item,)>>, [Region(BrAnon(0))]), Binder(<[closure@crates/ice/src/lib.rs:47:36: 47:46] as std::ops::FnOnce<(&u32,)>>, []), Sorts(ExpectedFound { expected: &u32, found: <ARef as Fetch<'_, '_>>::Item }))` selecting `Binder(<[closure@crates/ice/src/lib.rs:47:36: 47:46] as std::ops::FnOnce<(&u32,)>>, [])` during codegen\r","query_stack":null}
{"message":"Encountered error `OutputTypeParameterMismatch(Binder(<[closure@gats.rs:41:19: 41:50] as std::ops::FnMut<(<Windows<i32> as Iter>::Item<'_>,)>>), Binder(<[closure@gats.rs:41:19: 41:50] as std::ops::FnMut<(&mut [i32],)>>), Sorts(ExpectedFound { expected: &mut [i32], found: <Windows<i32> as Iter>::Item<'_> }))` selecting `Binder(<[closure@gats.rs:41:19: 41:50] as std::ops::FnMut<(&mut [i32],)>>)` during codegen\r","query_stack":null}
{"message":"Encountered error `OutputTypeParameterMismatch(Binder(<[closure@src/main.rs:18:17: 18:23] as std::ops::Fn<(<i32 as Borrowed<'_>>::Type,)>>), Binder(<[closure@src/main.rs:18:17: 18:23] as std::ops::Fn<(i32,)>>), Sorts(ExpectedFound { expected: i32, found: <i32 as Borrowed<'_>>::Type }))` selecting `Binder(<[closure@src/main.rs:18:17: 18:23] as std::ops::Fn<(i32,)>>)` during codegen\r","query_stack":null}
{"message":"Encountered error `OutputTypeParameterMismatch(Binder(<[closure@src/main.rs:23:53: 23:59] as std::ops::FnMut<(<bevy::ecs::query::EntityFetch as bevy::ecs::query::Fetch<'_>>::Item,)>>, [Region(BrAnon(0))]), Binder(<[closure@src/main.rs:23:53: 23:59] as std::ops::FnMut<(bevy::prelude::Entity,)>>, []), Sorts(ExpectedFound { expected: bevy::prelude::Entity, found: <bevy::ecs::query::EntityFetch as bevy::ecs::query::Fetch<'_>>::Item }))` selecting `Binder(<[closure@src/main.rs:23:53: 23:59] as std::ops::FnMut<(bevy::prelude::Entity,)>>, [])` during codegen\r","query_stack":null}
{"message":"Encountered error `OutputTypeParameterMismatch(Binder(<[closure@src/main.rs:27:10: 27:16] as std::ops::FnOnce<(<T as A<'_>>::B,)>>), Binder(<[closure@src/main.rs:27:10: 27:16] as std::ops::FnOnce<(S,)>>), Sorts(ExpectedFound { expected: S, found: <T as A<'_>>::B }))` selecting `Binder(<[closure@src/main.rs:27:10: 27:16] as std::ops::FnOnce<(S,)>>)` during codegen\r","query_stack":null}
{"message":"Encountered error `OutputTypeParameterMismatch(Binder(<[closure@src/main.rs:29:44: 29:54] as std::ops::FnOnce<(<i32 as Output<'_>>::Type,)>>), Binder(<[closure@src/main.rs:29:44: 29:54] as std::ops::FnOnce<(i32,)>>), Sorts(ExpectedFound { expected: i32, found: <i32 as Output<'_>>::Type }))` selecting `Binder(<[closure@src/main.rs:29:44: 29:54] as std::ops::FnOnce<(i32,)>>)` during codegen\r","query_stack":null}
{"message":"Encountered error `OutputTypeParameterMismatch(Binder(<[closure@src/main.rs:31:9: 31:15] as std::ops::FnMut<(<u32 as Foo<'_>>::Value,)>>), Binder(<[closure@src/main.rs:31:9: 31:15] as std::ops::FnMut<(u32,)>>), Sorts(ExpectedFound { expected: u32, found: <u32 as Foo<'_>>::Value }))` selecting `Binder(<[closure@src/main.rs:31:9: 31:15] as std::ops::FnMut<(u32,)>>)` during codegen\r","query_stack":null}
{"message":"Encountered error `OutputTypeParameterMismatch(Binder(<[closure@src/main.rs:33:20: 33:26] as std::ops::Fn<(&mut <() as AddLifetime<'_>>::Output,)>>, [Region(BrAnon(0)), Region(BrAnon(1))]), Binder(<[closure@src/main.rs:33:20: 33:26] as std::ops::Fn<(&mut &(),)>>, []), Sorts(ExpectedFound { expected: &(), found: <() as AddLifetime<'_>>::Output }))` selecting `Binder(<[closure@src/main.rs:33:20: 33:26] as std::ops::Fn<(&mut &(),)>>, [])` during codegen\r","query_stack":null}
{"message":"Encountered error `OutputTypeParameterMismatch(Binder(<[closure@src/main.rs:3:9: 3:52] as std::ops::FnMut<(&mut <&std::vec::Vec<std::string::String> as std::iter::IntoIterator>::IntoIter,)>>), Binder(<[closure@src/main.rs:3:9: 3:52] as std::ops::FnMut<(&mut std::slice::Iter<std::string::String>,)>>), Sorts(ExpectedFound { expected: std::slice::Iter<std::string::String>, found: <&std::vec::Vec<std::string::String> as std::iter::IntoIterator>::IntoIter }))` selecting `Binder(<[closure@src/main.rs:3:9: 3:52] as std::ops::FnMut<(&mut std::slice::Iter<std::string::String>,)>>)` during codegen\r","query_stack":null}
{"message":"Encountered error `OutputTypeParameterMismatch(Binder(<[closure@src/yoke.rs:16:17: 16:38] as std::ops::FnMut<(&<main::_doctest_main_src_yoke_rs_500_0::Bar as yoke::Yokeable<'_>>::Output, &())>>, [Region(BrAnon(0))]), Binder(<[closure@src/yoke.rs:16:17: 16:38] as std::ops::FnMut<(&main::_doctest_main_src_yoke_rs_500_0::Bar, &())>>, []), Sorts(ExpectedFound { expected: main::_doctest_main_src_yoke_rs_500_0::Bar, found: <main::_doctest_main_src_yoke_rs_500_0::Bar as yoke::Yokeable<'_>>::Output }))` selecting `Binder(<[closure@src/yoke.rs:16:17: 16:38] as std::ops::FnMut<(&main::_doctest_main_src_yoke_rs_500_0::Bar, &())>>, [])` during codegen\r","query_stack":null}
{"message":"Encountered error `OutputTypeParameterMismatch(Binder(<[closure@src\\main.rs:2:22: 2:34] as std::ops::FnOnce<(<() as Query<'_>>::Result,)>>), Binder(<[closure@src\\main.rs:2:22: 2:34] as std::ops::FnOnce<((),)>>), Sorts(ExpectedFound { expected: (), found: <() as Query<'_>>::Result }))` selecting `Binder(<[closure@src\\main.rs:2:22: 2:34] as std::ops::FnOnce<((),)>>)` during codegen\r","query_stack":null}
{"message":"Encountered error `OutputTypeParameterMismatch(Binder(<[closure@src\\operations\\generic_functions_3.rs:23:31: 23:49] as std::ops::Fn<(&<operations::generic_functions_3::C as operations::generic_functions_3::ColumnOutput<'_, u64>>::Output,)>>), Binder(<[closure@src\\operations\\generic_functions_3.rs:23:31: 23:49] as std::ops::Fn<(&u64,)>>), Sorts(ExpectedFound { expected: u64, found: \r","query_stack":null}
{"message":"Encountered error `Unimplemented` selecting `Binder(<() as Y>)` during codegen\r","query_stack":null}
{"message":"Encountered error `Unimplemented` selecting `Binder(<() as std::convert::AsRef<()>>)` during codegen\r","query_stack":null}
{"message":"Encountered errors `[FulfillmentError(Obligation(predicate=TraitPredicate(<Five as TypeVal<[type error]>>), depth=1),Ambiguity)]` resolving bounds after type-checking\r","query_stack":null}
{"message":"Encountered errors `[FulfillmentError(Obligation(predicate=TraitPredicate(<dyn sc_client_api::PrunableStateChangesTrieStorage<sp_runtime::generic::Block<sp_runtime::generic::Header<u32, sp_runtime::traits::BlakeTwo256>, sp_runtime::OpaqueExtrinsic>> as sp_state_machine::changes_trie::Storage<sp_runtime::traits::BlakeTwo256, u32>>), depth=0),Unimplemented)]` resolving bounds after type-checking\r","query_stack":null}
{"message":"ErrorReporting Overflow should not reach `report_selection_err` call\r","query_stack":null}
{"message":"Expected ConstKind::Param\r","query_stack":null}
{"message":"Failed to find info for expected trait in vtable\r","query_stack":null}
{"message":"Failed to norma[46/1972]\r","query_stack":null}
{"message":"Failed to normalize <&expr::Expr<'_> as rkyv::Archive>::Archived, maybe try to call `try_normalize_erasing_regions` instead\r","query_stack":null}
{"message":"Failed to normalize <() as Project>::Assoc, maybe try to call `try_normalize_erasing_regions` instead\r","query_stack":null}
{"message":"Failed to normalize <T as A>::B, maybe try to call `try_normalize_erasing_regions` instead\r","query_stack":null}
{"message":"Failed to normalize <Wrap as Associate>::Associated, maybe try to call `try_normalize_erasing_regions` instead\r","query_stack":null}
{"message":"Failed to normalize <[closure@src/main.rs:21:19: 21:22] as std::ops::FnOnce<(&S,)>>::Output, maybe try to call `try_normalize_erasing_regions` instead\r","query_stack":null}
{"message":"Failed to normalize <[closure@src/main.rs:36:25: 36:28] as std::ops::FnOnce<(Emplacable<()>,)>>::Output, maybe try to call `try_normalize_erasing_regions` instead\r","query_stack":null}
{"message":"Failed to normalize <bump_str::BumpStr<'_> as rkyv::Archive>::Resolver, maybe try to call `try_normalize_erasing_regions` instead\r","query_stack":null}
{"message":"Failed to normalize <impl Widget<()> as Widget<()>>::State, maybe try to call `try_normalize_erasing_regions` instead\r","query_stack":null}
{"message":"Failed to normalize <std::borrow::Cow<str> as rkyv::Archive>::Resolver, maybe try to call `try_normalize_erasing_regions` instead\r","query_stack":null}
{"message":"Failed to normalize <subcrate::Foo<C> as subcrate::Bar>::Associated, maybe try to call `try_normalize_erasing_regions` instead\r","query_stack":null}
{"message":"Failed to normalize <u8 as Identity>::Identity, maybe try to call `try_normalize_erasing_regions` instead\r","query_stack":null}
{"message":"Failed to normalize [closure@./82079.rs:13:25: 13:46], maybe try to call `try_normalize_erasing_regions` instead\r","query_stack":null}
{"message":"Failed to normalize std::result::Result<const_generics_bug::Foo<N>, <const_generics_bug::Foo<N> as std::convert::TryFrom<[i32; N]>>::Error>, maybe try to call `try_normalize_erasing_regions` instead\r","query_stack":null}
{"message":"Failed to normalize std::result::Result<fcg4::FixedI32<FRAC>, <fcg4::FixedI32<FRAC> as std::str::FromStr>::Err>, maybe try to call `try_normalize_erasing_regions` instead","query_stack":null}
{"message":"Fields cannot be extern types, unless they are at offset 0\r","query_stack":null}
{"message":"Got a scalar pair where a scalar was expected\r","query_stack":null}
{"message":"Impl DefId(0:335 ~ map_server[3b29]::mapserver::endpoints::map_endpoint::{impl#2}) was matchable against Obligation(predicate=Binder(TraitPredicate(<mapserver::endpoints::map_endpoint::map_endpoint as shaku::HasComponent<(dyn mapserver::environment::map::Map + 'static)>>, polarity:Positive), []), depth=3) but now is not\r","query_stack":null}
{"message":"Impl DefId(51:102 ~ pasts[c5c1]::race::{impl#1}) was matchable against Obligation(predicate=Binder(TraitPredicate(<pasts::race::Never<_, State> as pasts::race::StatefulFuture<std::option::Option<_>, State>>)), depth=0) but now is not\r","query_stack":null}
{"message":"In fn_like_elision without appropriate scope above\r","query_stack":null}
{"message":"Instance { def: Intrinsic(DefId(2:1659 ~ core[ec89]::intrinsics::#1::copy)), substs: [i32] } being reified\r","query_stack":null}
{"message":"Item being checked wasn't a function/closure: TraitItem(TraitItem { ident: dm4#0, hir_id: HirId { owner: DefId(0:4 ~ perses_node_priority_with_dfs_delta_reduced_mutant[317d]::Tr::dm4), local_id: 0 }, attrs: [], generics: Generics { params: [], where_clause: WhereClause { predicates: [], span: perses_node_priority_with_dfs_delta_reduced_mutant.rs:2:32: 2:32 (#0) }, span: perses_node_priority_with_dfs_delta_reduced_mutant.rs:2:30: 2:30 (#0) }, kind: Fn(FnSig { header: FnHeader { unsafety: Normal, constness: NotConst, asyncness: NotAsync, abi: RustCall }, decl: FnDecl { inputs: [], output: DefaultReturn(perses_node_priority_with_dfs_delta_reduced_mutant.rs:2:33: 2:33 (#0)), c_variadic: false, implicit_self: None }, span: perses_node_priority_with_dfs_delta_reduced_mutant.rs:2:5: 2:32 (#0) }, Provided(BodyId { hir_id: HirId { owner: DefId(0:4 ~ perses_node_priority_with_dfs_delta_reduced_mutant[317d]::Tr::dm4), local_id: 2 } })), span: perses_node_priority_with_dfs_delta_reduced_mutant.rs:2:5: 2:35 (#0) })\r","query_stack":null}
{"message":"Item being checked wasn't a function/closure: TraitItem(TraitItem { ident: fun#0, hir_id: HirId { owner: DefId(0:4 ~ feature_gate_abi[317d]::Tr::fun), local_id: 0 }, attrs: [], generics: Generics { params: [], where_clause: WhereClause { predicates: [], span: ./src/test/ui/feature-gates/feature-gate-abi.rs:2:32: 2:32 (#0) }, span: ./src/test/ui/feature-gates/feature-gate-abi.rs:2:30: 2:30 (#0) }, kind: Fn(FnSig { header: FnHeader { unsafety: Normal, constness: NotConst, asyncness: NotAsync, abi: RustCall }, decl: FnDecl { inputs: [], output: DefaultReturn(./src/test/ui/feature-gates/feature-gate-abi.rs:2:33: 2:33 (#0)), c_variadic: false, implicit_self: None }, span: ./src/test/ui/feature-gates/feature-gate-abi.rs:2:5: 2:32 (#0) }, Provided(BodyId { hir_id: HirId { owner: DefId(0:4 ~ feature_gate_abi[317d]::Tr::fun), local_id: 2 } })), span: ./src/test/ui/feature-gates/feature-gate-abi.rs:2:5: 2:35 (#0) })\r","query_stack":null}
{"message":"LLVM asm constraint validation failed\r","query_stack":null}
{"message":"Layout::compute: unexpected type `^0`\r","query_stack":null}
{"message":"No HirId for DefId(0:5 ~ icemaker_72173[a007]::C::new::{opaque#0})","query_stack":null}
{"message":"No HirId for DefId(0:5 ~ ks[f9da]::f::alloc)\r","query_stack":null}
{"message":"No HirId for DefId(0:6 ~ playground[522f]::{extern#0}::L::{closure#0})\r","query_stack":null}
{"message":"No HirId for DefId(0:6 ~ test[86f1]::T::foo::{closure#0})\r","query_stack":null}
{"message":"No bound vars found for \"expr {} (hir_id=HirId { owner: DefId(0:3 ~ playground[ea18]::X), local_id: 10 })\" (HirId { owner: DefId(0:3 ~ playground[ea18]::X), local_id: 10 })\r","query_stack":null}
{"message":"No bound vars found for \"expr || 1 (hir_id=HirId { owner: DefId(0:3 ~ playground[aec1]::main), local_id: 7 })\" (HirId { owner: DefId(0:3 ~ playground[aec1]::main), local_id: 7 })\r","query_stack":null}
{"message":"Not enough bound vars: BoundRegion { var: 0, kind: BrNamed(DefId(0:4 ~ 88586[6450]::A::'a), 'a) } not found in []\r","query_stack":null}
{"message":"Not enough bound vars: BoundRegion { var: 0, kind: BrNamed(DefId(0:4 ~ issue_88586[e2ea]::A::'a), 'a) } not found in []\r","query_stack":null}
{"message":"Not enough bound vars: BoundRegion { var: 0, kind: BrNamed(DefId(0:5 ~ treereduce[ec07]::ice::'_), '_) } not found in []\r","query_stack":null}
{"message":"Not enough bound vars: BoundRegion { var: 0, kind: BrNamed(DefId(0:6 ~ bad[f6ab]::str::'_), '_) } not found in []\r","query_stack":null}
{"message":"Not enough bound vars: BoundRegion { var: 0, kind: BrNamed(DefId(0:6 ~ hy[af0c]::f::'j), 'j) } not found in []\r","query_stack":null}
{"message":"Please use load_scalar for ByVal\r","query_stack":null}
{"message":"Projection bound `Binder(<<Self as Proximity<T>>::Distance as std::cmp::PartialOrd<<<Self as Proximity<T>>::Distance as Distance>::Value>>)` was applicable to `Obligation(predicate=Binder(TraitPredicate(<<Self as Proximity<T>>::Distance as std::cmp::PartialOrd>)), depth=0)` but now is not\r","query_stack":null}
{"message":"ProjectionKinds Deref and Field were mismatched: (Deref, Field(5, 0))\r","query_stack":null}
{"message":"ProjectionKinds Deref and Field were mismatched: (Field(0, 0), Deref)\r","query_stack":null}
{"message":"Region parameter out of range when substituting in region '_ (index=0)\r","query_stack":null}
{"message":"Region parameter out of range when substituting in region '_ (index=4, substs = [Self, K, V, ReEarlyBound(4, '_)])\r","query_stack":null}
{"message":"Region parameter out of range when substituting in region 'a (index=1)\r","query_stack":null}
{"message":"Region parameter out of range when substituting in region 'a (index=1, substs = ['_#21r])\r","query_stack":null}
{"message":"Region parameter out of range when substituting in region 'a (index=1, substs = ['_#22r])\r","query_stack":null}
{"message":"Region parameter out of range when substituting in region 'a (index=1, substs = [i32])\r","query_stack":null}
{"message":"Region parameter out of range when substituting in region 'a (index=2)\r","query_stack":null}
{"message":"Region parameter out of range when substituting in region 'a (index=2, substs = ['_#1r, '_#1r])\r","query_stack":null}
{"message":"Region parameter out of range when substituting in region 'a (index=3)\r","query_stack":null}
{"message":"Region parameter out of range when substituting in region 'b (index=3)\r","query_stack":null}
{"message":"Region parameter out of range when substituting in region 'b (index=4)","query_stack":null}
{"message":"Region parameter out of range when substituting in region 'b (index=5)\r","query_stack":null}
{"message":"SizeSkeleton::compute(*const (dyn for<'a> Fn(&'a [type error]) + 'static)): layout errored (the type `[type error]` has an unknown layout), yet tail `(dyn for<'a> Fn(&'a [type error]) + 'static)` is not a type parameter or a projection","query_stack":null}
{"message":"StableHasher: unexpected region '_#0r","query_stack":null}
{"message":"StableHasher: unexpected region '_#0r\r","query_stack":null}
{"message":"StableHasher: unexpected region '_#1r\r","query_stack":null}
{"message":"StableHasher: unexpected region '_#2r\r","query_stack":null}
{"message":"StableHasher: unexpected region '_#44r\r","query_stack":null}
{"message":"StableHasher: unexpected region RePlaceholder(Placeholder { universe: U1, name: BrNamed(DefId(0:10 ~ ice[14c8]::Wrap::'a), 'a) })\r","query_stack":null}
{"message":"StableHasher: unexpected region RePlaceholder(Placeholder { universe: U4, name: BrNamed(DefId(0:199 ~ netstack3[e4ac]::bindings::ethernet_worker::EthernetWorker::'a), 'a) })\r","query_stack":null}
{"message":"Subslice unexpected because it isn't captured\r","query_stack":null}
{"message":"The type checker should prevent reading from a never-written local\r","query_stack":null}
{"message":"To use strict_coherence you need to set with_negative_coherence feature flag\r","query_stack":null}
{"message":"Trying to collect bound vars with a bound region: DebruijnIndex(0) BoundRegion { var: 0, kind: BrAnon(0) }\r","query_stack":null}
{"message":"Ty::fn_sig() called on non-fn type: <() as CallableStr>::T\r","query_stack":null}
{"message":"Ty::fn_sig() called on non-fn type: _\r","query_stack":null}
{"message":"Unexpected ImplItem Const(Ty { hir_id: HirId { owner: DefId(0:7 ~ network_controller[c8bb]::{impl#0}::NAMES), local_id: 5 }, kind: Array(Ty { hir_id: HirId { owner: DefId(0:7 ~ network_controller[c8bb]::{impl#0}::NAMES), local_id: 1 }, kind: Path(Resolved(None, Path { span: src/main.rs:7:16: 7:19 (#0), res: PrimTy(Str), segments: [PathSegment { ident: str#0, hir_id: Some(HirId { owner: DefId(0:7 ~ network_controller[c8bb]::{impl#0}::NAMES), local_id: 2 }), res: Some(Err), args: None, infer_args: false }] })), span: src/main.rs:7:16: 7:19 (#0) }, AnonConst { hir_id: HirId { owner: DefId(0:7 ~ network_controller[c8bb]::{impl#0}::NAMES), local_id: 3 }, body: BodyId { hir_id: HirId { owner: DefId(0:7 ~ network_controller[c8bb]::{impl#0}::NAMES), local_id: 4 } } }), span: src/main.rs:7:15: 7:23 (#0) }, BodyId { hir_id: HirId { owner: DefId(0:7 ~ network_controller[c8bb]::{impl#0}::NAMES), local_id: 10 } })\r","query_stack":null}
{"message":"Unexpected TraitItem Const(Ty { hir_id: HirId { owner: DefId(0:4 ~ mutant[d0c6]::u32::CONST), local_id: 3 }, kind: TraitObject([PolyTraitRef { bound_generic_params: [], trait_ref: TraitRef { path: Path { span: mutant.rs:2:18: 2:21 (#0), res: Def(Trait, DefId(0:3 ~ mutant[d0c6]::u32)), segments: [PathSegment { ident: u32#0, hir_id: Some(HirId { owner: DefId(0:4 ~ mutant[d0c6]::u32::CONST), local_id: 2 }), res: Some(Def(Trait, DefId(0:3 ~ mutant[d0c6]::u32))), args: None, infer_args: false }] }, hir_ref_id: HirId { owner: DefId(0:4 ~ mutant[d0c6]::u32::CONST), local_id: 1 } }, span: mutant.rs:2:18: 2:21 (#0) }], lifetime(HirId { owner: DefId(0:4 ~ mutant[d0c6]::u32::CONST), local_id: 4 }: ), None), span: mutant.rs:2:18: 2:21 (#0) }, None)\r","query_stack":null}
{"message":"Unexpected TraitItem Const(Ty { hir_id: HirId { owner: DefId(0:52 ~ ice_on_example[788e]::with_blank_trait_and_generic_impl::TraitWithConstOnly::CONST), local_id: 1 }, kind: Path(Resolved(None, Path { span: ice_on_example/src/lib.rs:79:22: 79:48 (#0), res: Def(Struct, DefId(0:44 ~ ice_on_example[788e]::with_blank_trait_and_generic_impl::GenericNewTypeStruct)), segments: [PathSegment { ident: GenericNewTypeStruct#0, hir_id: Some(HirId { owner: DefId(0:52 ~ ice_on_example[788e]::with_blank_trait_and_generic_impl::TraitWithConstOnly::CONST), local_id: 4 }), res: Some(Err), args: Some(GenericArgs { args: [Type(Ty { hir_id: HirId { owner: DefId(0:52 ~ ice_on_example[788e]::with_blank_trait_and_generic_impl::TraitWithConstOnly::CONST), local_id: 2 }, kind: Path(Resolved(None, Path { span: ice_on_example/src/lib.rs:79:43: 79:47 (#0), res: SelfTy(Some(DefId(0:51 ~ ice_on_example[788e]::with_blank_trait_and_generic_impl::TraitWithConstOnly)), None), segments: [PathSegment { ident: Self#0, hir_id: Some(HirId { owner: DefId(0:52 ~ ice_on_example[788e]::with_blank_trait_and_generic_impl::TraitWithConstOnly::CONST), local_id: 3 }), res: Some(SelfTy(Some(DefId(0:51 ~ ice_on_example[788e]::with_blank_trait_and_generic_impl::TraitWithConstOnly)), None)), args: None, infer_args: false }] })), span: ice_on_example/src/lib.rs:79:43: 79:47 (#0) })], bindings: [], parenthesized: false, span_ext: ice_on_example/src/lib.rs:79:42: 79:48 (#0) }), infer_args: false }] })), span: ice_on_example/src/lib.rs:79:22: 79:48 (#0) }, None)\r","query_stack":null}
{"message":"Unexpected error during validation: unable to turn pointer into raw bytes\r","query_stack":null}
{"message":"Unexpected node ForeignItem(ForeignItem { ident: VAR#0, kind: Static(Ty { hir_id: HirId { owner: DefId(0:8 ~ boom[15c8]::{extern#0}::VAR), local_id: 1 }, kind: Path(Resolved(None, Path { span: boom.rs:12:17: 12:27 (#0), res: Def(Struct, DefId(0:4 ~ boom[15c8]::Struct)), segments: [PathSegment { ident: Struct#0, hir_id: Some(HirId { owner: DefId(0:8 ~ boom[15c8]::{extern#0}::VAR), local_id: 4 }), res: Some(Err), args: Some(GenericArgs { args: [Type(Ty { hir_id: HirId { owner: DefId(0:8 ~ boom[15c8]::{extern#0}::VAR), local_id: 2 }, kind: Path(Resolved(None, Path { span: boom.rs:12:24: 12:26 (#0), res: PrimTy(Uint(U8)), segments: [PathSegment { ident: u8#0, hir_id: Some(HirId { owner: DefId(0:8 ~ boom[15c8]::{extern#0}::VAR), local_id: 3 }), res: Some(Err), args: None, infer_args: false }] })), span: boom.rs:12:24: 12:26 (#0) })], bindings: [], parenthesized: false, span_ext: boom.rs:12:23: 12:27 (#0) }), infer_args: false }] })), span: boom.rs:12:17: 12:27 (#0) }, Not), def_id: DefId(0:8 ~ boom[15c8]::{extern#0}::VAR), span: boom.rs:12:5: 12:28 (#0), vis: Spanned { node: Inherited, span: boom.rs:12:5: 12:5 (#0) } }) ","query_stack":null}
{"message":"Unexpected representation of upvar types tuple Bound(DebruijnIndex(0), BoundTy { var: 1, kind: Anon })\r","query_stack":null}
{"message":"Unexpected type Opaque(DefId(0:5 ~ issue_96572_unconstrained_upvar[63a9]::main::T::{opaque#0}), []) for `Field` projection\r","query_stack":null}
{"message":"Unexpected type for `Single` constructor: <&soft::Ref as soft::Resources>::BufferArray\r","query_stack":null}
{"message":"Unexpected type for `Single` constructor: <client::Client<L, C, S, F> as Environment>::Constant\r","query_stack":null}
{"message":"Unsigned value 0x100000000 does not fit in 32 bits\r","query_stack":null}
{"message":"When translating substitutions for specialization, the expected specialization failed to hold\r","query_stack":null}
{"message":"Where clause `Binder(<style::color::Color<TopBg> as style::Over<style::cell::Cell<BottomFg, BottomBg>, style::cell::Cell<NewFg, NewBg>>>, [])` was applicable to `Obligation(predicate=Binder(TraitPredicate(<style::color::Color<TopBg> as style::Over<style::cell::Cell<_, _>, style::cell::Cell<_, _>>>), []), depth=2)` but now is not\r","query_stack":null}
{"message":"`build_constraints_for_item` unsupported for this item\r","query_stack":null}
{"message":"`fn_abi_of_instance(Detector::detect, [])` failed: the type `[type error]` has an unknown layout\r","query_stack":null}
{"message":"`is_trivially_sized` applied to unexpected type: ^0\r","query_stack":null}
{"message":"`mplace_index` called on non-array type f32x3\r","query_stack":null}
{"message":"`simd_size_and_type` called on invalid type\r","query_stack":null}
{"message":"`tcx.dep_kind(crate0)` unsupported by its crate\r","query_stack":null}
{"message":"`tcx.resolutions(())` is not supported for local crate;\r","query_stack":null}
{"message":"add_outlives_bounds: unexpected regions\r","query_stack":null}
{"message":"argument to function with \"rust-call\" ABI is not a tuple\r","query_stack":null}
{"message":"asked to assemble builtin bounds of unexpected type: Placeholder(Placeholder { universe: U1, name: 0 })\r","query_stack":null}
{"message":"asked to assemble builtin bounds of unexpected type: Placeholder(Placeholder { universe: U1, name: Param(DefId(0:5 ~ 9d3cc313aa5fe95f721ef30c9a732644292ba048[7297]::V::V#1), \"V\") })\r","query_stack":null}
{"message":"asked to assemble builtin bounds of unexpected type: T","query_stack":null}
{"message":"asked to compute variance for wrong kind of item\r","query_stack":null}
{"message":"associated type missing default\r","query_stack":null}
{"message":"associated_item_def_ids: not impl or trait\r","query_stack":null}
{"message":"async fn generator return type not an inference variable\r","query_stack":null}
{"message":"asyncness: expected fn-like node but got `DefId(0:4296 ~ pmu[7eea]::::main)`\r","query_stack":null}
{"message":"bad closure kind\r","query_stack":null}
{"message":"body_owned_by: struct Bug (hir_id=HirId { owner: DefId(0:3 ~ 67405[c442]::Bug), local_id: 0 }) has no associated body\r","query_stack":null}
{"message":"bound region is not anonymous\r","query_stack":null}
{"message":"bound types encountered in super_relate_tys\r","query_stack":null}
{"message":"can't type-check body of DefId(0:3 ~ 78721[317d]::Bug)\r","query_stack":null}
{"message":"can't type-check body of DefId(0:3 ~ playground[f69e]::Bug)\r","query_stack":null}
{"message":"cannot convert `ReEarlyBound(0, 'a)` to a region vid\r","query_stack":null}
{"message":"cannot convert `ReEarlyBound(1, '_)` to a region vid\r","query_stack":null}
{"message":"cannot convert `ReErased` to a region vid\r","query_stack":null}
{"message":"cannot convert `ReFree(DefId(0:5 ~ playground[38a3]::wow[0]), BrNamed(DefId(0:6 ~ playground[38a3]::wow[0]::'a[0]), 'a))` to a region vid\r","query_stack":null}
{"message":"cannot convert `RePlaceholder(Placeholder { universe: U1, name: BrAnon(0, None) })` to a region vid\r","query_stack":null}
{"message":"cannot convert `RePlaceholder(Placeholder { universe: U2, name: BrAnon(0) })` to a region vid\r","query_stack":null}
{"message":"cannot convert `RePlaceholder(Placeholder { universe: U2, name: BrNamed(DefId(0:29 ~ playground[828e]::{impl#3}::do_something::'a), 'a) })` to a region vid\r","query_stack":null}
{"message":"cannot convert `RePlaceholder(Placeholder { universe: U2, name: BrNamed(DefId(0:6 ~ example[abda]::with_usize::'any#1), 'any) })` to a region vid\r","query_stack":null}
{"message":"cannot convert `RePlaceholder(Placeholder { universe: U3, name: BrNamed(DefId(0:14 ~ ice_bug[4a45]::{impl#0}::'b#1), 'b) })` to a region vid\r","query_stack":null}
{"message":"cannot convert `RePlaceholder(Placeholder { universe: U4, name: BrNamed(DefId(0:13 ~ playground[8973]::{impl#0}::'a#1), 'a) })` to a region vid\r","query_stack":null}
{"message":"cannot convert `RePlaceholder(Placeholder { universe: U4, name: BrNamed(DefId(0:8 ~ playground[beb8]::wrapper::'a#1), 'a) })` to a region vid\r","query_stack":null}
{"message":"cannot convert `RePlaceholder(Placeholder { universe: U5, name: BrNamed(DefId(0:8 ~ playground[a09e]::walk[0]::'a[1]), 'a) })` to a region vid\r","query_stack":null}
{"message":"cannot create local mono-item for DefId(1:307 ~ std[99a1]::thread::local::{impl#4}::with)\r","query_stack":null}
{"message":"cannot destructure constant Const { ty: &'static [&'static str], val: Value(ByRef { alloc: Allocation { bytes: [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0], relocations: Relocations(SortedMap { data: [(Size { raw: 0 }, alloc5)] }), init_mask: InitMask { blocks: [65535], len: Size { raw: 16 } }, align: Align { pow2: 3 }, mutability: Not, extra: () }, offset: Size { raw: 0 } }) }\r","query_stack":null}
{"message":"cannot destructure constant Const { ty: &[fn()], val: Value(ByRef { alloc: Allocation { bytes: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], relocations: Relocations(SortedMap { data: [(Size { raw: 0 }, alloc4)] }), init_mask: InitMask { blocks: [65535], len: Size { raw: 16 } }, align: Align { pow2: 3 }, mutability: Not, extra: () }, offset: Size { raw: 0 } }) }\r","query_stack":null}
{"message":"cannot get associated-item of `DefKey { parent: Some(DefIndex(37465)), disambiguated_data: DisambiguatedDefPathData { data: TypeNs(\"None\"), disambiguator: 0 } }`\r","query_stack":null}
{"message":"cannot get associated-item of `DefKey { parent: Some(DefIndex(9472)), disambiguated_data: DisambiguatedDefPathData { data: ValueNs(\"ptr\"), disambiguator: 0 } }`\r","query_stack":null}
{"message":"cannot relate bound region: ReErased <= ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed(DefId(0:12 ~ example[113b]::{impl#0}::'a#1), 'a) })\r","query_stack":null}
{"message":"cannot relate bound region: ReErased <= ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed(DefId(0:7 ~ playground[e57e]::{impl#0}::'a#1), 'a) })\r","query_stack":null}
{"message":"cannot relate bound region: ReError <= ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed(DefId(0:32 ~ 21719089E87B4DC2F26447D67DC99251BCF5E8F5235B79C1D8484F9BBFA8BC24[896f]::Document::cursor::'_), '_) })\r","query_stack":null}
{"message":"cannot relate bound region: ReLateBound(DebruijnIndex(0), BoundRegion { kind: BrAnon(0) }) <= '_#14r\r","query_stack":null}
{"message":"cannot relate bound region: ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed(DefId(0:118 ~ trader[966e]::tests::trader_example#1::'_), '_) }) <= ReLateBound(DebruijnIndex(0), BoundRegion { var: 1, kind: BrNamed(DefId(0:105 ~ trader[966e]::trader::{impl#1}::set_closure::'_#2), '_) })\r","query_stack":null}
{"message":"cannot relate bound region: ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed(DefId(0:21 ~ hexevent[d727]::tests::invoker::'a), 'a) }) <= '_#9r\r","query_stack":null}
{"message":"cannot relate bound region: ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed(DefId(0:23 ~ rustc_internal_bug_1[4a0a]::main::'_), '_) }) <= '_#20r\r","query_stack":null}
{"message":"cannot relate bound region: ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed(DefId(0:6 ~ intenal_panic[553d]::bar::'_), '_) }) <= ReLateBound(DebruijnIndex(0), BoundRegion { var: 1, kind: BrNamed(DefId(0:9 ~ intenal_panic[553d]::foo::'_#1), '_) })\r","query_stack":null}
{"message":"cannot relate bound region: ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed(DefId(0:8 ~ bug_report[998e]::Stepper::do_step::'m), 'm) }) <= '_#2r\r","query_stack":null}
{"message":"cannot relate bound region: ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed(DefId(0:8 ~ lending_iter[ce9f]::LendingIterator::consume::'a), 'a) }) <= '_#1r\r","query_stack":null}
{"message":"cannot relate bound region: ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed(DefId(20:611 ~ plotters[4c18]::chart::context::{impl#1}::draw_series::'b), 'b) }) <= '_#18r\r","query_stack":null}
{"message":"cannot relate bound region: ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed(DefId(56:611 ~ plotters[b1d9]::chart::context::{impl#1}::draw_series::'b), 'b) }) <= '_#53r\r","query_stack":null}
{"message":"cannot relate bound region: ReLateBound(DebruijnIndex(0), BoundRegion { var: 1, kind: BrNamed(DefId(0:100 ~ tutorial[6788]::tower_shooting::'_#1), '_) }) <= '_#6r\r","query_stack":null}
{"message":"cannot relate bound region: ReLateBound(DebruijnIndex(0), BoundRegion { var: 1, kind: BrNamed(DefId(0:8 ~ prefix[b2cc]::longest_common_prefix::'_#1), '_) }) <= '_#29r\r","query_stack":null}
{"message":"cannot relate bound region: ReLateBound(DebruijnIndex(1), BoundRegion { var: 0, kind: BrAnon(0) }) <= ReErased\r","query_stack":null}
{"message":"cannot relate bound region: ReLateBound(DebruijnIndex(1), BrNamed(DefId(0:6 ~ playground[efd4]::bug::'a), 'a)) <= '_#1r\r","query_stack":null}
{"message":"cannot relate bound region: `ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed(DefId(0:199 ~ dev_remenants[a0e3]::is_ignored::'_), '_) }) <= '_#3r`\r","query_stack":null}
{"message":"cannot relate region: LUB(ReEarlyBound(0, 'a), ReErased)\r","query_stack":null}
{"message":"cannot relate region: LUB(ReErased, ReEarlyBound(0, 'm))\r","query_stack":null}
{"message":"cannot relate region: LUB(ReErased, ReEmpty(U0))\r","query_stack":null}
{"message":"cannot relate region: LUB(ReErased, ReErased)\r","query_stack":null}
{"message":"cannot relate region: LUB(ReErased, ReError)\r","query_stack":null}
{"message":"cannot relate region: LUB(ReErased, ReFree(DefId(0:6 ~ main[317d]::f), BrNamed(DefId(0:7 ~ main[317d]::f::'a), 'a)))\r","query_stack":null}
{"message":"cannot relate region: LUB(ReErased, ReFree(DefId(0:7 ~ replace_impl_infer_ty_from_trait[c2b9]::{impl#0}::bar), BrAnon(0)))\r","query_stack":null}
{"message":"cannot relate region: LUB(ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrNamed(DefId(0:7 ~ testy_tanky[1935]::EphemeralContext::handle::'c), 'c) }), ReFree(DefId(0:6 ~ testy_tanky[1935]::EphemeralContext::handle), BrAnon(0)))\r","query_stack":null}
{"message":"cannot relate region: LUB(ReStatic, ReErased)\r","query_stack":null}
{"message":"cannot relate region: ReErased\r","query_stack":null}
{"message":"cannot relate region: ReError","query_stack":null}
{"message":"checking wfness of `ConstKind::Expr` is unsupported\r","query_stack":null}
{"message":"closure_sig_as_fn_ptr_ty is not a fn-ptr: Param(<closure_signature>/#1)\r","query_stack":null}
{"message":"codegen_argument: OperandRef(Immediate((i8*:  %7 = load i8*, i8** %2, align 8, !nonnull !2, !align !3, !noundef !2)) @ TyAndLayout { ty: [closure@ICE.rs:7:3: 7:21], layout: Layout { fields: Arbitrary { offsets: [Size(0 bytes)], memory_index: [0] }, variants: Single { index: 0 }, abi: Scalar(Initialized { value: Pointer, valid_range: 1..=18446744073709551615 }), largest_niche: Some(Niche { offset: Size(0 bytes), value: Pointer, valid_range: 1..=18446744073709551615 }), align: AbiAndPrefAlign { abi: Align(8 bytes), pref: Align(8 bytes) }, size: Size(8 bytes) } }) invalid for pair argument\r","query_stack":null}
{"message":"codegen_argument: OperandRef(Ref((%\"type 0x7f3777ae3c80\"*:  %4 = alloca %41, align 1), None, Align { pow2: 0 }) @ TyAndLayout { ty: std::future::from_generator::GenFuture<[static generator@src/main.rs:161:87: 171:2]>, layout: Layout { fields: Arbitrary { offsets: [Size { raw: 0 }], memory_index: [0] }, variants: Single { index: 0 }, abi: Aggregate { sized: true }, largest_niche: Some(Niche { offset: Size { raw: 0 }, scalar: Scalar { value: Int(I8, false), valid_range: 0..=2 } }), align: AbiAndPrefAlign { abi: Align { pow2: 0 }, pref: Align { pow2: 3 } }, size: Size { raw: 1 } } }) invalid for pair argument\r","query_stack":null}
{"message":"collection encountered polymorphic constant\r","query_stack":null}
{"message":"collection encountered polymorphic constant: Unevaluated(UnevaluatedConst { def: WithOptConstParam { did: DefId(0:5 ~ issue_39292[a2ad]::Foo::print), const_param_did: None }, substs: [(), T, ReErased], promoted: Some(promoted[1]) }, &[&str; 1])","query_stack":null}
{"message":"collection encountered polymorphic constant: Unevaluated(UnevaluatedConst { def: WithOptConstParam { did: DefId(2:22756 ~ core[a02b]::core_simd::swizzle::Swizzle2Impl::INDEX_IMPL), const_param_did: None }, substs: [two::join::S, Const { ty: usize, kind: Value(Leaf(0x0000000000000008)) }, Const { ty: usize, kind: Value(Leaf(0x0000000000000010)) }], promoted: None }, [u32; 16]))\r","query_stack":null}
{"message":"collection encountered polymorphic constant: Unevaluated(UnevaluatedConst { def: WithOptConstParam { did: DefId(35:1008 ~ heapless[ed6d]::vec::{impl#0}::INIT), const_param_did: None }, substs: [nalgebra::Complex<f64>, Const { ty: usize, kind: Unevaluated(UnevaluatedConst { def: WithOptConstParam { did: DefId(0:426 ~ sci_rs[f7c7]::signal::filter::design::zpk2tf::poly_st::{constant#2}), const_param_did: Some(DefId(35:1000 ~ heapless[ed6d]::vec::Vec::N)) }, substs: [nalgebra::Complex<f64>, Const { ty: usize, kind: Expr(Binop(Mul, Const { ty: usize, kind: Value(Leaf(0x0000000000000004)) }, Const { ty: usize, kind: Value(Leaf(0x0000000000000002)) })) }] }) }], promoted: None }, [std::mem::MaybeUninit<nalgebra::Complex<f64>>; { N + 1 }])\r","query_stack":null}
{"message":"collection encountered polymorphic constant: Unevaluated(UnevaluatedConst { def: WithOptConstParam { did: DefId(43:1008 ~ heapless[99d5]::vec::{impl#0}::INIT), const_param_did: None }, substs: [num_complex::Complex<f64>, Const { ty: usize, kind: Unevaluated(UnevaluatedConst { def: WithOptConstParam { did: DefId(27:400 ~ sci_rs[d81d]::signal::filter::design::zpk2tf::poly_st::{constant#2}), const_param_did: Some(DefId(43:1000 ~ heapless[99d5]::vec::Vec::N)) }, substs: [num_complex::Complex<f64>, Const { ty: usize, kind: Expr(Binop(Mul, Const { ty: usize, kind: Value(Leaf(0x0000000000000004)) }, Const { ty: usize, kind: Value(Leaf(0x0000000000000002)) })) }] }) }], promoted: None }, [std::mem::MaybeUninit<num_complex::Complex<f64>>; _])\r","query_stack":null}
{"message":"compute_type_of_item: unexpected item type: Trait(No, Normal, Generics { params: [], predicates: [], has_where_clause_predicates: false, where_clause_span: uiq.rs:1:10: 1:10 (#0), span: uiq.rs:1:10: 1:10 (#0) }, [], [])\r","query_stack":null}
{"message":"compute_type_of_item: unexpected item type: Trait(No, Normal, Generics { params: [], where_clause: WhereClause { predicates: [], span: perses_node_priority_with_dfs_delta_reduced_mutant.rs:3:10: 3:10 (#0) }, span: perses_node_priority_with_dfs_delta_reduced_mutant.rs:3:10: 3:10 (#0) }, [], [])\r","query_stack":null}
{"message":"const parameter `A/#0` (Const { ty: usize, val: Param(A/#0) }/0) out of range when substituting substs=[]\r","query_stack":null}
{"message":"const parameter `C/#0` (Const { ty: (), val: Param(C/#0) }/0) out of range when substituting substs=[]\r","query_stack":null}
{"message":"const parameter `COOP_PREFERRED/#2` (Const { ty: bool, kind: Param(COOP_PREFERRED/#2) }/2) out of range when substituting substs=[_, alloc::Global]\r","query_stack":null}
{"message":"const parameter `COUNT/#0` (Const { ty: usize, val: Param(COUNT/#0) }/0) out of range when substituting substs=[]\r","query_stack":null}
{"message":"const parameter `D/#0` (Const { ty: usize, val: Param(D/#0) }/0) out of range when substituting substs=[]\r","query_stack":null}
{"message":"const parameter `M/#2` (Const { ty: u8, kind: Param(M/#2) }/2) out of range when substituting substs=[(), Const { ty: u8, kind: Value(Leaf(0x02)) }]\r","query_stack":null}
{"message":"const parameter `MASK/#2` (Const { ty: u32, val: Param(MASK/#2) }/2) out of range when substituting substs=[]\r","query_stack":null}
{"message":"const parameter `N/#0` (Const { ty: u16, val: Param(N/#0) }/0) out of range when substituting substs=[]","query_stack":null}
{"message":"const parameter `N/#0` (Const { ty: u8, kind: Param(N/#0) }/0) out of range when substituting substs=[]\r","query_stack":null}
{"message":"const parameter `N/#0` (Const { ty: usize, val: Param(N/#0) }/0) out of range when substituting substs=[]\r","query_stack":null}
{"message":"const parameter `ROWS/#0` (Const { ty: usize, val: Param(ROWS/#0) }/0) out of range when substituting substs=[]\r","query_stack":null}
{"message":"const parameter `S/#1` (Const { ty: [type error], kind: Param(S/#1) }/1) out of range when substituting substs=[Const { ty: (), kind: Error(DelaySpanBugEmitted { reported: ErrorGuaranteed(()), _priv: () }) }]\r","query_stack":null}
{"message":"const parameter `S/#1` (Const { ty: usize, val: Param(S/#1) }/1) out of range when substituting substs=[<Self as FooBar>::Tr]\r","query_stack":null}
{"message":"const parameter `SIZE/#1` (Const { ty: usize, val: Param(SIZE/#1) }/1) out of range when substituting substs=[]\r","query_stack":null}
{"message":"const parameter `U/#0` (Const { ty: usize, kind: Param(U/#0) }/0) out of range when substituting substs=[]\r","query_stack":null}
{"message":"could not decode cached query result: invalid enum variant tag while decoding `Transparency`, expected 0..3","query_stack":null}
{"message":"could not decode cached query result: read_option: expected 0 for None or 1 for Some\r","query_stack":null}
{"message":"could not find allocation for alloc1\r","query_stack":null}
{"message":"could not fully normalize `&<sudoku::grid::Sudoku<SQUARE_SIZE> as std::ops::Index<sudoku::grid::CellPosition<SQUARE_SIZE>>>::Output`\r","query_stack":null}
{"message":"could not fully normalize `(<(<I as invocation::Invocation>::RoundNum, std::sync::Arc<<<I as invocation::Invocation>::State as state::State>::LogEntry>) as invocation::Invocation>::RoundNum, std::sync::Arc<<<(<I as invocation::Invocation>::RoundNum, std::sync::Arc<<<I as invocation::Invocation>::State as state::State>::LogEntry>) as invocation::Invocation>::State as state::State>::LogEntry>)`\r","query_stack":null}
{"message":"could not fully normalize `(<[T; N] as ordes::OrdesDec>::Newlen, <[T; N] as ordes::OrdesDec>::Output)`\r","query_stack":null}
{"message":"could not fully normalize `<&Extern as Trait>::Type`\r","query_stack":null}
{"message":"could not fully normalize `<&Struct as Trait>::Type`\r","query_stack":null}
{"message":"could not fully normalize `<&mut I as std::iter::IntoIterator>::IntoIter`\r","query_stack":null}
{"message":"could not fully normalize `<() as Foo>::Bar`\r","query_stack":null}
{"message":"could not fully normalize `<<I as std::iter::Iterator>::Item as std::iter::Iterator>::Item`\r","query_stack":null}
{"message":"could not fully normalize `<<S<T> as std::iter::Iterator>::next::U as std::iter::Iterator>::Item`\r","query_stack":null}
{"message":"could not fully normalize `<N as generic_array::ArrayLength<u8>>::ArrayType`\r","query_stack":null}
{"message":"could not fully normalize `<T as Foo>::Bar`\r","query_stack":null}
{"message":"could not fully normalize `<Wrap as Associate>::Associated`\r","query_stack":null}
{"message":"could not fully normalize `<[E] as std::borrow::ToOwned>::Owned`\r","query_stack":null}
{"message":"could not fully normalize `<bounded_int::BoundedTest<LMIN, LMAX> as std::ops::Add<bounded_int::BoundedTest<RMIN, RMAX>>>::Output`\r","query_stack":null}
{"message":"could not fully normalize `<const_unit_poc::Quantity<UL> as std::ops::Div<const_unit_poc::Quantity<UR>>>::Output`\r","query_stack":null}
{"message":"could not fully normalize `<my_crate::Const<U> as my_crate::Trait>::AssocTy`\r","query_stack":null}
{"message":"could not fully normalize `<sample::TraitImpl<N> as sample::Trait>::R`\r","query_stack":null}
{"message":"could not fully normalize `<static_la::MatrixSxS<T, L, M> as static_la::Matmul<static_la::MatrixSxS<T, M, N>>>::Output`\r","query_stack":null}
{"message":"could not fully normalize `Const { ty: fn() -> usize {std::mem::size_of::<<Self as HardcodedPayload>::ArrayType>}, val: Value(Scalar(<ZST>)) }`\r","query_stack":null}
{"message":"could not fully normalize `Const { ty: fn() -> usize {std::mem::size_of::<<T as Ice>::Array>}, val: Value(Scalar(<ZST>)) }`\r","query_stack":null}
{"message":"could not fully normalize `combine::combinator::Y<<impl combine::Parser as combine::Parser>::PartialState, <impl combine::Parser as combine::Parser>::PartialState>`\r","query_stack":null}
{"message":"could not fully normalize `core::Relation<impl core::operator::Op>`\r","query_stack":null}
{"message":"could not fully normalize `core::result::Result<(), <micro_rp2040::peripherals::comm::i2c::blocking::I2CMasterInterface<N> as embedded_hal::i2c::blocking::Write>::Error>`\r","query_stack":null}
{"message":"could not fully normalize `fn() -> &'static str {std::any::type_name::<<for<'r> fn(&'r ()) -> <() as SomeTrait<'r>>::Associated as std::ops::FnOnce<(&(),)>>::Output>}`\r","query_stack":null}
{"message":"could not fully normalize `fn([closure@warp::Server<warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::get::{closure#0}]>::{closure#0}]>, fn() -> impl futures::Future {test1}>>::bind_ephemeral<([u8; 4], u16)>::{closure#0}], <warp::hyper::Server<warp::hyper::server::conn::AddrIncoming, warp::hyper::service::make::MakeServiceFn<[closure@warp::Server<warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::get::{closure#0}]>::{closure#0}]>, fn() -> impl futures::Future {test1}>>::bind_ephemeral<([u8; 4], u16)>::{closure#1}::{closure#0}]>> as futures::Future>::Output) -> <[closure@warp::Server<warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::get::{closure#0}]>::{closure#0}]>, \r","query_stack":null}
{"message":"could not fully normalize `std::ptr::NonNull<std::ptr::NonNull<<windows::foundation::IAsyncOperation<TResult> as winrt::com::interface::ComInterface>::VTable>>`\r","query_stack":null}
{"message":"could not fully normalize `synth::instrument::Voice<<std::alloc::Global as synth::instrument::NoteFreqGenerator>::NoteFreq>`\r","query_stack":null}
{"message":"could not resolve DefId(0:5 ~ 733aa7416df0ee2943481d202059f8582eb2be38[7c0b]::test_argument_position::test_argument_position)\r","query_stack":null}
{"message":"couldn't create field type, unexpected base type: upvar::T\r","query_stack":null}
{"message":"couldn't find hir id HirId { owner: DefId(0:0 ~ icetest[63b0]), local_id: 0 } in the HIR map\r","query_stack":null}
{"message":"couldn't find hir id HirId { owner: DefId(0:5 ~ playground[443b]::::r::{impl#0}), local_id: 0 } in the HIR map\r","query_stack":null}
{"message":"data-layout for builtin `thumbv4t-none-eabi` target, `e-S64-p:32:32-i64:64-m:e-n32`, differs from LLVM default, `e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64`\r","query_stack":null}
{"message":"data-layout for builtin `x86_64-unknown-unknown-gnu` target, `e-m:e-i64:64-f80:128-n8:16:32:64-S128`, differs from LLVM default, `e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128`\r","query_stack":null}
{"message":"deref projection of non-dereferenceable ty PlaceTy { ty: (), variant_index: None }\r","query_stack":null}
{"message":"deref_target_place is not a deref projection\r","query_stack":null}
{"message":"discriminant_for_variant called on zero variant enum\r","query_stack":null}
{"message":"drop of untracked, uninitialized value bb2, place _1[_3] (Parent(Some(mp1)))\r","query_stack":null}
{"message":"drop of untracked, uninitialized value bb8, place (((_1.0: kvec::KVec<(K, V), N>).0: [(K, V); N])[_22].1: V) (Parent(Some(mp32)))\r","query_stack":null}
{"message":"encode_const: unexpected type `[usize; 1]`","query_stack":null}
{"message":"encountered a fresh type during canonicalization\r","query_stack":null}
{"message":"encountered bad ConstKind after monomorphizing: Error(DelaySpanBugEmitted(()))\r","query_stack":null}
{"message":"error: the type `[type error]` has an unknown layout\r","query_stack":null}
{"message":"escaping bound vars in predicate Obligation(predicate=Binder(TraitPredicate(<<Z as TraitA<'a>>::AsA as TraitB<'a, 'b>>)), depth=0)\r","query_stack":null}
{"message":"escaping bound vars in predicate Obligation(predicate=Binder(TraitPredicate(<ReturnType<'_> as std::marker::Sized>, polarity:Positive), []), depth=0)\r","query_stack":null}
{"message":"escaping late-bound region during canonicalization\r","query_stack":null}
{"message":"eval_const_to_op: Unexpected ConstKind Const { ty: u8, val: Bound(DebruijnIndex(0), 0) }\r","query_stack":null}
{"message":"expect tcx.sess.has_errors return true\r","query_stack":null}
{"message":"expected Box to contain Unique\r","query_stack":null}
{"message":"expected ConstKind::Param here, found Const { ty: f64, kind: Error(ErrorGuaranteed(())) }","query_stack":null}
{"message":"expected ConstKind::Value\r","query_stack":null}
{"message":"expected bits of (), got Const {\r","query_stack":null}
{"message":"expected bits of [u32; 16], got Const {\r","query_stack":null}
{"message":"expected bits of [u32; 4], got Const {\r","query_stack":null}
{"message":"expected bits of units::unit_dims::UnitDims, got Const {\r","query_stack":null}
{"message":"expected bits of usize, got Const {\r","query_stack":null}
{"message":"expected const for `ADDRESS/#1` (Const { ty: u8, val: Param(ADDRESS/#1) }/1) but found Type([type error]) when substituting substs=[(dyn bit_byte_structs::bus::Interface<Error = bit_byte_structs::bus::InterfaceError<E>> + 'static), [type error], [type error], [type error]]\r","query_stack":null}
{"message":"expected const for `GRAPH_ID/#0` (Const { ty: usize, val: Param(GRAPH_ID/#0) }/0) but found Type(dir_graph::star::Star<GRAPH_ID>) when substituting substs=[dir_graph::sta\r","query_stack":null}
{"message":"expected defining type for `DefId(0:10 ~ mutant[317d]::{impl#0}::foo::{closure#0})`: `[type error]`\r","query_stack":null}
{"message":"expected defining type for `DefId(0:11 ~ rust_ice2[317d]::test[0]::{{closure}}[1])`: `[type error]`\r","query_stack":null}
{"message":"expected defining type for `DefId(0:13 ~ bug[fad1]::{impl#0}::func::{closure#0})`: `[type error]`\r","query_stack":null}
{"message":"expected defining type for `DefId(0:14 ~ generator_existential_types[3c81]::{impl#0}::run::{closure#0})`: `[type error]`\r","query_stack":null}
{"message":"expected defining type for `DefId(0:16 ~ playground[4992]::{impl#0}::spawn::{closure#0})`: `[type error]`","query_stack":null}
{"message":"expected defining type for `DefId(0:8 ~ playground[61eb]::x::{closure#0}::{closure#0})`: `[type error]`\r","query_stack":null}
{"message":"expected int of size 8, but got size 1","query_stack":null}
{"message":"expected int of size 8, but got size 1\r","query_stack":null}
{"message":"expected item, found assoc constant T in T::T (hir_id=HirId { owner: DefId(0:4 ~ mutant[317d]::T::T), local_id: 0 })\r","query_stack":null}
{"message":"expected item, found trait method bar in Foo::bar (hir_id=HirId { owner: OwnerId { def_id: DefId(0:10 ~ nested_rpitit[fe13]::Foo::bar) }, local_id: 0 })\r","query_stack":null}
{"message":"expected item, found trait method quux in Foo::quux (hir_id=HirId { owner: DefId(0:4 ~ perses_node_priority_with_dfs_delta_reduced_mutant[317d]::Foo::quux), local_id: 0 })\r","query_stack":null}
{"message":"expected item, found unknown node (hir_id=HirId { owner: DefId(0:3 ~ test[317d]::b), local_id: 0 })\r","query_stack":null}
{"message":"expected to convert valtree to raw bytes for type u8\r","query_stack":null}
{"message":"expected type for `R/#1` (R/1) but found Lifetime(ReFree(DefId(0:11 ~ embedded_hal_async[dae4]::spi::{impl#0}::transaction), BrNamed(DefId(0:16 ~ embedded_hal_async[dae4]::spi::SpiDevice::transaction::'_), '_))) when substituting, substs=[R, ReFree(DefId(0:11 ~ embedded_hal_async[dae4]::spi::{impl#0}::transaction), BrNamed(DefId(0:16 ~ embedded_hal_async[dae4]::spi::SpiDevice::transaction::'_), '_)), ReFree(DefId(0:11 ~ embedded_hal_async[dae4]::spi::{impl#0}::transaction), BrNamed(DefId(0:16 ~ embedded_hal_async[dae4]::spi::SpiDevice::transaction::'_), '_))]\r","query_stack":null}
{"message":"expected type for `T/#0` (T/0) but found Lifetime('_#77r) when substituting, substs=['_#77r, vga_buffer::Writer]\r","query_stack":null}
{"message":"expected type for `W/#3` (W/3) but found Const(Const { ty: usize, val: Param(N/#3) }) when substituting, substs=[mode::Reader<T>, R, W, Const { ty: usize, val: Param(N/#3) }]\r","query_stack":null}
{"message":"expected type for `b/#0` (b/0) but found Lifetime(ReStatic) when substituting, substs=[ReStatic]\r","query_stack":null}
{"message":"expected type parameter, but found another generic parameter\r","query_stack":null}
{"message":"expected wide pointer extra data (e.g. slice length or trait object vtable)\r","query_stack":null}
{"message":"extracting field of non-tuple non-adt: PlaceTy { ty: main::T, variant_index: None }\r","query_stack":null}
{"message":"failed to compute implied bounds impl std::ops::Fn<(nalgebra::Matrix<f64, nalgebra::U3, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<f64, nalgebra::U3>>::Buffer>,)>\r","query_stack":null}
{"message":"failed to find an overloaded call trait for closure call\r","query_stack":null}
{"message":"failed to fully normalize DefId(0:16 ~ 43037[6c8e]::{impl#2}): [FulfillmentError(Obligation(predicate=Binder(TraitPredicate(<T as X>, polarity:Positive), []), depth=1),Unimplemented)]\r","query_stack":null}
{"message":"failed to get layout for `&mut Pin<&mut hyper::server::shutdown::Grac\r","query_stack":null}
{"message":"failed to get layout for `&mut Pin<&mut hyper::server::shutdown::Graceful<rocket_http::listener::Incoming<rocket::ext::CancellableListener<rocket::shutdown::Shutdown, L>>, hyper::service::make::MakeServiceFn<[closure@rocket::serv\r","query_stack":null}
{"message":"failed to get layout for `&mut Pin<&mut rocket::http::hyper::server::shutdown::Graceful<rocket::http::private::Incoming<rocket::ext::CancellableListener<rocket::Shutdown, L>>, service::make::MakeServiceFn<[closure@rocket::server::<impl Rocket<Orbit>>::http_server<L>::{closure#0}::{closure#2}]>, rocket::Shutdown, hyper::common::exec::Exec>>`: unable to determine layout for `&mut Pin<&mut rocket::http::hyper::server::shutdown::Graceful<rocket::http::private::Incoming<rocket::ext::CancellableListener<rocket::Shutdown, L>>, service::make::MakeServiceFn<[closure@rocket::server::<impl Rocket<Orbit>>::http_server<L>::{closure#0}::{closure#2}]>, rocket::Shutdown, hyper::common::exec::Exec>>` because `&mut Pin<&mut rocket::http::hyper::server::shutdown::Graceful<rocket::http::private::Incoming<rocket::ext::CancellableListener<rocket::Shutdown, L>>, service::make::MakeServiceFn<[closure@rocket::server::<impl Rocket<Orbit>>::http_server<L>::{closure#0}::{closure#2}]>, rocket::Shutdown, hyper::common::exec::Exec>>` cannot be normalized\r","query_stack":null}
{"message":"failed to get layout for `&mut Pin<&mut server::shutdown::Graceful<rocket::http::private::Incoming<rocket::ext::CancellableListener<rocket::Shutdown, L>>, service::make::MakeServiceFn<[closure@rocket::server::<impl Rocket<Orbit>>::http_server<L>::{closure#0\r","query_stack":null}
{"message":"failed to get layout for `&mut Pin<&mut server::shutdown::Graceful<rocket::http::private::Incoming<rocket::ext::CancellableListener<rocket::Shutdown, L>>, service::make::MakeServiceFn<[closure@rocket::server::<impl Rocket<Orbit>>::http_server<L>::{closure#0}::{closure#2}]>, rocket::Shutdown, hyper::common::exec::Exec>>`: unable to determine layout for `&mut Pin<&mut server::shutdown::Graceful<rocket::http::private::Incoming<rocket::ext::CancellableListener<rocket::Shutdown, L>>, service::make::MakeServiceFn<[closure@rocket::server::<impl Rocket<Orbit>>::http_server<L>::{closure#0}::{closure#2}]>, rocket::Shutdown, hyper::common::exec::Exec>>` because `&mut Pin<&mut server::shutdown::Graceful<rocket::http::private::Incoming<rocket::ext::CancellableListener<rocket::Shutdown, L>>, service::make::MakeServiceFn<[closure@rocket::server::<impl Rocket<Orbit>>::http_server<L>::{closure#0}::{closure#2}]>, rocket::Shutdown, hyper::common::exec::Exec>>` cannot be normalized\r","query_stack":null}
{"message":"failed to get layout for `&rc::RcBox<Node<i32, RcFamily>>`: the type `Node<i32, RcFamily>` has an unknown layout\r","query_stack":null}
{"message":"failed to get layout for `Box<P>`: the type `std::alloc::Global` has an unknown layout\r","query_stack":null}
{"message":"failed to get layout for `Either<(std::result::Result<O, error::Error>, Pin<&mut [async block@/home/michael/.cargo/registry/src/github.com-1ecc6299db9ec823/zbus-2.3.2/src/connection.rs:830:30: 835:10]>), ((), Pin<&mut F>)>`: the type `O` has an unknown layout\r","query_stack":null}
{"message":"failed to get layout for `Inner<Func<Numbers>>`: the type `<Func<Numbers> as Pointee>::Metadata` has an unknown layout\r","query_stack":null}
{"message":"failed to get layout for `Result<<SaveUser as StorageRequestReturnType>::Output, String>`: the type `<SaveUser as StorageRequestReturnType>::Output` has an unknown layout","query_stack":null}
{"message":"failed to get layout for `[type error]`: the type `[type error]` has an unknown layout\r","query_stack":null}
{"message":"failed to get layout for `[usize; _]`: the type `[usize; _]` has an unknown layout\r","query_stack":null}
{"message":"failed to get layout for `rocket::futures::future::Either<((), Pin<&mut rocket::futures::future::MapErr<hyper::server::shutdown::Graceful<rocket::h\r","query_stack":null}
{"message":"failed to get output type of async function","query_stack":null}
{"message":"failed to get output type of async function\r","query_stack":null}
{"message":"failed to resolve instance for <() as Visit>::visit\r","query_stack":null}
{"message":"failed to resolve instance for <MatrixSxS<&i32, [const expr], [const expr]> as From<[[&i32; 2]; 1]>>::from\r","query_stack":null}
{"message":"failed to resolve instance for <fn(axum::extract::State<Config>, DiscordUser, axum::Json<SubmitImageResponse>) -> impl Future<Output = StatusCode> ","query_stack":null}
{"message":"field access on non aggregate <uninitialized>, TyAndLayout {\r","query_stack":null}
{"message":"find_vtable_types_for_unsizing: invalid coercion <() as Smartass>::Data -> <dyn MaybeObjectSafe as Smartass>::Data\r","query_stack":null}
{"message":"finding type for DefId(0:3 ~ perses_node_priority_with_dfs_delta_reduced_mutant[8787]::{misc#1}), encountered def-id DefId(0:0 ~ perses_node_priority_with_dfs_delta_reduced_mutant[8787]) with no parent\r","query_stack":null}
{"message":"finding type for DefId(0:6 ~ const_generics_demangling[317d]::{impl#0}), encountered def-id DefId(0:0 ~ const_generics_demangling[317d]) with no parent\r","query_stack":null}
{"message":"finding type for DefId(0:6 ~ ice[2e3e]::{impl#0}), encountered def-id DefId(0:0 ~ ice[2e3e]) with no parent\r","query_stack":null}
{"message":"fn_arg_names: unexpected item DefId(0:5 ~ 659b4bf9cb28826af248db582fdd0c70e77d41f3[89ee]::dst::{extern#0}::dst)\r","query_stack":null}
{"message":"for_variant called on zero-variant enum\r","query_stack":null}
{"message":"found node must be a function\r","query_stack":null}
{"message":"from_const: invalid ScalarPair layout: TyAndLayout {\r","query_stack":null}
{"message":"fully private item in the table DefId(0:5 ~ 310b743961389e3451c10cc3fb8a2104bbaae065[92fb]::sysconf#1::_SC_NPROCESSORS_ONLN): Restricted(DefId(0:4 ~ 310b743961389e3451c10cc3fb8a2104bbaae065[92fb]::sysconf#1))\r","query_stack":null}
{"message":"fully private item in the table DefId(0:881 ~ bacon[0c20]::{use#3}): Restricted(DefId(0:0 ~ bacon[0c20]))\r","query_stack":null}
{"message":"get_adt_def called on a non-ADT DefId(21:855 ~ traitgraph[39ee]::walks::VecNodeWalk)\r","query_stack":null}
{"message":"get_adt_def called on a non-ADT DefId(33:288 ~ syntax[67bd]::ptr::SyntaxNodePtr)\r","query_stack":null}
{"message":"get_optimized_mir: missing MIR for `DefId(18:48 ~ async_executor[37d1]::{impl#4}::run::{closure#0})`\r","query_stack":null}
{"message":"get_optimized_mir: missing MIR for `DefId(4:14 ~ no_std_lib[cfa6]::lang_start)`\r","query_stack":null}
{"message":"get_optimized_mir: missing MIR for `DefId(4:22 ~ nrf52_sys[e357]::start[0])`\r","query_stack":null}
{"message":"get_optimized_mir: missing MIR for `DefId(4:4 ~ ice_test_lib[6871]::start)`\r","query_stack":null}
{"message":"get_optimized_mir: missing MIR for `DefId(4:5 ~ langstart[abf0]::lang_start)`\r","query_stack":null}
{"message":"get_vtable_index_of_object_method: DefId(0:8 ~ playground[3faf]::Vector2::from_values) was not found\r","query_stack":null}
{"message":"impossible case reached\r","query_stack":null}
{"message":"improper_ctypes: Option nonnull optimization not applied?\r","query_stack":null}
{"message":"input to call/call_mut is not a ref?\r","query_stack":null}
{"message":"invalid loop id for break: not inside loop scope\r","query_stack":null}
{"message":"invalid unsizing &B -> [u8]\r","query_stack":null}
{"message":"item_name: no name for DefPath { data: [DisambiguatedDefPathData { data: Impl, disambiguator: 0 }], krate: crate0 }\r","query_stack":null}
{"message":"item_name: no name for DefPath { data: [DisambiguatedDefPathData { data: Use, disambiguator: 1 }], krate: crate0 }\r","query_stack":null}
{"message":"item_name: no name for DefPath { data: [DisambiguatedDefPathData { data: ValueNs(\"outer_function\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ClosureExpr, disambiguator: 0 }], krate: crate0 }\r","query_stack":null}
{"message":"layout decided on a larger discriminant type (I32) than typeck (I16)\r","query_stack":null}
{"message":"local_def_id: no entry for `HirId { owner: DefId(0:3 ~ issue_75982[4e75]::_), local_id: 2 }`, which has a map of `Some(Stmt(Stmt { hir_id: HirId { owner: DefId(0:3 ~ issue_75982[4e75]::_), local_id: 2 }, kind: Item(ItemId { def_id: DefId(0:4 ~ issue_75982[4e75]::_::first_macro) }), span: ./src/test/ui/macros/auxiliary/issue-75982.rs:3:5: 5:6 (#0) }))`\r","query_stack":null}
{"message":"local_def_id: no entry for `HirId { owner: OwnerId { def_id: DefId(0:8 ~ try_trait[742b]::test_function) }, local_id: 1 }`, which has a map of `Some(Stmt(Stmt { hir_id: HirId { owner: OwnerId { def_id: DefId(0:8 ~ try_trait[742b]::test_function) }, local_id: 1 }, kind: Item(ItemId { owner_id: OwnerId { def_id: DefId(0:9 ~ try_trait[742b]::test_function::{impl#0}) } }), span: src/lib.rs:8:5: 12:6 (#0) }))`","query_stack":null}
{"message":"malformed transparent type\r","query_stack":null}
{"message":"member constraint for `DefId(0:10 ~ playground[4db5]::{{impl}}[0]::Associated[0]::{{opaque}}[0])` has an option region `'_#4r` that is not a universal region\r","query_stack":null}
{"message":"no MIR available for DefId(18:1344 ~ cranelift_codegen[5c47]::machinst::buffer::{impl#3}::get_srclocs_sorted)\r","query_stack":null}
{"message":"no MIR available for DefId(18:254 ~ maitake[bea2]::task::nop)\r","query_stack":null}
{"message":"no MIR available for DefId(19:3 ~ foo[8787]::FOO)\r","query_stack":null}
{"message":"no MIR available for DefId(1:7577 ~ std[b00f]::process::{impl#22}::new)\r","query_stack":null}
{"message":"no MIR available for DefId(20:1331 ~ cranelift_codegen[4ffc]::machinst::buffer::{impl#3}::get_srclocs_sorted)\r","query_stack":null}
{"message":"no MIR available for DefId(20:7 ~ dioxus[5642]::inner::{impl#0}::do_stuff)\r","query_stack":null}
{"message":"no MIR available for DefId(20:9953 ~ cranelift_codegen[5733]::machinst::buffer::{impl#3}::get_srclocs_sorted)\r","query_stack":null}
{"message":"no MIR available for DefId(20:9953 ~ cranelift_codegen[d26a]::machinst::buffer::{impl#3}::get_srclocs_sorted)\r","query_stack":null}
{"message":"no MIR available for DefId(5:12 ~ ice_test[1249]::DEFAULT_HEAP)\r","query_stack":null}
{"message":"no arg matching AnonConst in path\r","query_stack":null}
{"message":"no enclosing scope for id 6","query_stack":null}
{"message":"no enclosing scope for id 7\r","query_stack":null}
{"message":"no name for local let mut num_flags = 0; (hir_id=HirId { owner: DefId(0:3 ~ ice_repro[e526]::test), local_id: 3 })","query_stack":null}
{"message":"no name for param # [ doc ( alias = \"false\" ) ] DiagnosticBuilder (hir_id=HirId { owner: DefId(0:4 ~ mutant[8787]::StructuredDiagnostic::extended), local_id: 1 })\r","query_stack":null}
{"message":"no type for local variable local 0 (hir_id=HirId { owner: DefId(0:3 ~ reduced_mutant[317d]::main), local_id: 23 })\r","query_stack":null}
{"message":"no type for local variable local _=m (hir_id=HirId { owner: DefId(0:3 ~ playground[b6e0]::r), local_id: 6 })\r","query_stack":null}
{"message":"no type for local variable local let actual = glyf; (hir_id=HirId { owner: OwnerId { def_id: DefId(0:3 ~ issue_4031[ae59]::main) }, local_id: 12 })\r","query_stack":null}
{"message":"no type for local variable local let tx; (hir_id=HirId { owner: DefId(0:3 ~ mutant[8787]::main), local_id: 3 })\r","query_stack":null}
{"message":"no type for local variable local let y = x + 1; (hir_id=HirId { owner: DefId(0:4 ~ expr_block[ee93]::combine_block), local_id: 13 })","query_stack":null}
{"message":"no type for local variable unknown node (hir_id=HirId { owner: DefId(0:3 ~ playground[9c6c]::main[0]), local_id: 2 })\r","query_stack":null}
{"message":"no type for node HirId { owner: DefId(0:3 ~ main[2056]::main), local_id: 3 }: type i32 (hir_id=HirId { owner: DefId(0:3 ~ main[2056]::main), local_id: 3 }) in fcx 0x7fb2c47f0fd0\r","query_stack":null}
{"message":"no type for node HirId { owner: DefId(0:3 ~ test_project[01a1]::main), local_id: 3 }: type String? (hir_id=HirId { owner: DefId(0:3 ~ test_project[01a1]::main), local_id: 3 }) in fcx 0x7f87421f0e80\r","query_stack":null}
{"message":"no type for node HirId { owner: OwnerId { def_id: DefId(0:3 ~ compiler_bug[a9cb]::cause_compiler_bug) }, local_id: 5 }: expr content_line::fail() (hir_id=HirId { owner: OwnerId { def_id: DefId(0:3 ~ compiler_bug[a9cb]::cause_compiler_bug) }, local_id: 5 }) in fcx 0x16b892c78\r","query_stack":null}
{"message":"no type for node HirId { owner: OwnerId { def_id: DefId(0:3 ~ page_size[87e6]::main) }, local_id: 5 }: expr page_size::get() (hir_id=HirId { owner: OwnerId { def_id: DefId(0:3 ~ page_size[87e6]::main) }, local_id: 5 }) in fcx 0x7f8f7f3ed7f0\r","query_stack":null}
{"message":"no type for node HirId { owner: OwnerId { def_id: DefId(0:5 ~ ntfn[dbda]::f) }, local_id: 3 }: type impl Oops (hir_id=HirId { owner: OwnerId { def_id: DefId(0:5 ~ ntfn[dbda]::f) }, local_id: 3 }) in fcx 0x7000069e82f0","query_stack":null}
{"message":"no type for node HirId { owner: OwnerId { def_id: DefId(0:7 ~ bug[d697]::main) }, local_id: 5 }: type () (hir_id=HirId { owner: OwnerId { def_id: DefId(0:7 ~ bug[d697]::main) }, local_id: 5 }) in fcx 0x7f24d37ed710\r","query_stack":null}
{"message":"no type-dependent def for method\r","query_stack":null}
{"message":"node type T::Assoc (hir_id=HirId { owner: DefId(0:14 ~ bound_normalization_pass[317d]::impl_trait_in_bindings[0]::foo[0]::{{opaque}}[0]), local_id: 1 }) with HirId::owner DefId(0:14 ~ bound_normalization_pass[317d]::impl_trait_in_bindings[0]::foo[0]::{{opaque}}[0]) cannot be placed in TypeckTables with hir_owner DefId(0:12 ~ bound_normalization_pass[317d]::impl_trait_in_bindings[0]::foo[0])\r","query_stack":null}
{"message":"node type T::Assoc (hir_id=HirId { owner: DefId(0:23 ~ bound_normalization_pass[317d]::impl_trait_in_bindings[0]::foo[0]::{{opaque}}[0]), local_id: 1 }) with HirId::owner DefId(0:23 ~ bound_normalization_pass[317d]::impl_trait_in_bindings[0]::foo[0]::{{opaque}}[0]) cannot be placed in TypeckResults with hir_owner DefId(0:21 ~ bound_normalization_pass[317d]::impl_trait_in_bindings[0]::foo[0])\r","query_stack":null}
{"message":"node_type: no type for node HirId(DefId(0:3 ~ b4e3e6e357ce50d67ce4898edcd83ad3abd98189[98c0]::i32).4) (type `i32`)\r","query_stack":null}
{"message":"node_type: no type for node `expr None() (hir_id=HirId { owner: OwnerId { def_id: DefId(0:6 ~ f13b3787cf9d87b92160f13b638f7e516241c09f[6d87]::foo) }, local_id: 8 })`\r","query_stack":null}
{"message":"node_type: no type for node `expr {","query_stack":null}
{"message":"node_type: no type for node `expr {\r","query_stack":null}
{"message":"node_type: no type for node `type crate::archive::ArArchiveBuilder<'_> (hir_id=HirId { owner: DefId(0:15 ~ 9b62bf4183779f002aba901cbe888acec64ea7c5[15ed]::{impl#0}::link), local_id: 10 })`\r","query_stack":null}
{"message":"not a literal: Expr { hir_id: HirId { owner: DefId(0:5 ~ rust_out[6150]::main::_doctest_main_src_lib_rs_3_0), local_id: 39 }, kind: Call(Expr { hir_id: HirId { owner: DefId(0:5 ~ rust_out[6150]::main::_doctest_main_src_lib_rs_3_0), local_id: 38 }, kind: Path(TypeRelative(Ty { hir_id: HirId { owner: DefId(0:5 ~ rust_out[6150]::main::_doctest_main_src_lib_rs_3_0), local_id: 36 }, kind: Path(Resolved(None, Path { span: /home/ian/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:43:36: 43:52 (#6), res: Def(Struct, DefId(5:6801 ~ alloc[197d]::vec::Vec)), segments: [PathSegment { ident: $crate#6, hir_id: Some(HirId { owner: DefId(0:5 ~ rust_out[6150]::main::_doctest_main_src_lib_rs_3_0), local_id: 33 }), res: Some(Err), args: None, infer_args: true }, PathSegment { ident: vec#6, hir_id: Some(HirId { owner: DefId(0:5 ~ rust_out[6150]::main::_doctest_main_src_lib_rs_3_0), local_id: 34 }), res: Some(Def(Mod, DefId(5:6024 ~ alloc[197d]::vec))), args: None, infer_args: true }, PathSegment { ident: Vec#6, hir_id: Some(HirId { owner: DefId(0:5 ~ rust_out[6150]::main::_doctest_main_src_lib_rs_3_0), local_id: 35 }), res: Some(Err), args: None, infer_args: true }] })), span: /home/ian/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:43:36: 43:52 (#6) }, PathSegment { ident: new#6, hir_id: Some(HirId { owner: DefId(0:5 ~ rust_out[6150]::main::_doctest_main_src_lib_rs_3_0), local_id: 37 }), res: Some(Err), args: None, infer_args: true })), span: /home/ian/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:43:36: 43:57 (#6) }, []), span: /home/ian/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:43:36: 43:59 (#6) }\r","query_stack":null}
{"message":"not a literal: Expr { hir_id: HirId { owner: DefId(0:6 ~ playground[319e]::main2), local_id: 34 }, kind: Call(Expr { hir_id: HirId { owner: DefId(0:6 ~ playground[319e]::main2), local_id: 33 }, kind: Path(TypeRelative(Ty { hir_id: HirId { owner: DefId(0:6 ~ playground[319e]::main2), local_id: 31 }, kind: Path(Resolved(None, Path { span: /rustc/a178d0322ce20e33eac124758e837cbd80a6f633/library/alloc/src/macros.rs:45:36: 45:52 (#5), res: Def(Struct, DefId(5:6773 ~ alloc[df14]::vec::Vec)), segments: [PathSegment { ident: $crate#5, hir_id: Some(HirId { owner: DefId(0:6 ~ playground[319e]::main2), local_id: 28 }), res: Some(Err), args: None, infer_args: true }, PathSegment { ident: vec#5, hir_id: Some(HirId { owner: DefId(0:6 ~ playground[319e]::main2), local_id: 29 }), res: Some(Def(Mod, DefId(5:5996 ~ alloc[df14]::vec))), args: None, infer_args: true }, PathSegment { ident: Vec#5, hir_id: Some(HirId { owner: DefId(0:6 ~ playground[319e]::main2), local_id: 30 }), res: Some(Err), args: None, infer_args: true }] })), span: /rustc/a178d0322ce20e33eac124758e837cbd80a6f633/library/alloc/src/macros.rs:45:36: 45:52 (#5) }, PathSegment { ident: new#5, hir_id: Some(HirId { owner: DefId(0:6 ~ playground[319e]::main2), local_id: 32 }), res: Some(Err), args: None, infer_args: true })), span: /rustc/a178d0322ce20e33eac124758e837cbd80a6f633/library/alloc/src/macros.rs:45:36: 45:57 (#5) }, []), span: /rustc/a178d0322ce20e33eac124758e837cbd80a6f633/library/alloc/src/macros.rs:45:36: 45:59 (#5) }\r","query_stack":null}
{"message":"only ConstKind::Param should be encountered here, got Const { ty: f64, kind: Error(ErrorGuaranteed(())) }\r","query_stack":null}
{"message":"open drop from non-ADT `impl futures::Future<Output = ()>`\r","query_stack":null}
{"message":"primitive read failed for type: Aligned\r","query_stack":null}
{"message":"primitive read failed for type: std::string::String\r","query_stack":null}
{"message":"primitive read not possible for type: AlignedUsize\r","query_stack":null}
{"message":"primitive read not possible for type: [i32; 4]\r","query_stack":null}
{"message":"private Restricted(DefId(0:4 ~ perr_n[96e5]::a#1)) > direct Restricted(DefId(0:5 ~ perr_n[96e5]::a#1::b))\r","query_stack":null}
{"message":"raw ptr comparison should already be caught in the trait system\r","query_stack":null}
{"message":"receiver type has unsupported layout: TyAndLayout { ty: &std::boxed::Box<dyn Fetcher>, layout: Layout { size: Size(8 bytes), align: AbiAndPrefAlign { abi: Align(8 bytes), pref: Align(8 bytes) }, abi: Scalar(Initialized { value: Pointer, valid_range: 1..=18446744073709551615 }), fields: Primitive, largest_niche: Some(Niche { offset: Size(0 bytes), value: Pointer, valid_range: 1..=18446744073709551615 }), variants: Single { index: 0 } } }\r","query_stack":null}
{"message":"region is not an ReVar: ReEarlyBound(0, 'a)\r","query_stack":null}
{"message":"should be a function item","query_stack":null}
{"message":"should be a function item\r","query_stack":null}
{"message":"should be handled by `try_coerce`\r","query_stack":null}
{"message":"size_and_align_of::<[closure@cps.rs:14:57: 16:14]> not supported\r","query_stack":null}
{"message":"size_and_align_of::<[closure@test.rs:15:5: 17:7]> not supported\r","query_stack":null}
{"message":"source_file.name should be a RealFileName, but it was: Real(Devirtualized { local_path: \"C:\\\\Users\\\\diggs\\\\.rustup\\\\toolchains\\\\nightly-x86_64-pc-windows-msvc\\\\lib/rustlib/src/rust\\\\library\\\\core\\\\src\\\\macros\\\\mod.rs\", virtual_name: \"/rustc/3525087ada7018ef227b10846648660b7f07b6d1\\\\library\\\\core\\\\src\\\\macros\\\\mod.rs\" })\r","query_stack":null}
{"message":"start.file.name should be a RealFileName, but it was: Real(Devirtualized { local_path: \"/Users/tim/.rustup/toolchains/1.48.0-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs\", virtual_name: \"/rustc/7eac88abb2e57e752f3302f02be5f3ce3d7adfb4/library/core/src/macros/mod.rs\" })\r","query_stack":null}
{"message":"struct cannot be packed and aligned\r","query_stack":null}
{"message":"symbol_names: unsupported constant of type `&str` (Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [105, 110, 116], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [7], len: Size { raw: 3 } }, size: Size { raw: 3 }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 3 }) })\r","query_stack":null}
{"message":"symbol_names: unsupported constant of type `bool` (Const { ty: bool, val: Value(Scalar(0x01)) })\r","query_stack":null}
{"message":"symbol_names: unsupported constant of type `f32` (Const { ty: f32, val: Value(Scalar(0x3f000000)) ","query_stack":null}
{"message":"to get the signature of a closure, use `substs.as_closure().sig()` not `fn_sig()`\r","query_stack":null}
{"message":"transform_ty: unexpected `Param(T/#0)`","query_stack":null}
{"message":"trying to call extern function `test_fn::{closure#0}` at compile-time\r","query_stack":null}
{"message":"trying to compare incompatible constructors Single and Or","query_stack":null}
{"message":"trying to compare incompatible constructors Single and Str(Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [105, 115, 115, 117, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [31], len: Size { raw: 5 } }, size: Size { raw: 5 }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 5 }) })\r","query_stack":null}
{"message":"trying to compare incompatible constructors Single and Str(Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [109, 97, 120, 95, 119, 105, 100, 116, 104], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [511], len: Size { raw: 9 } }, size: Size { raw: 9 }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 9 }) })\r","query_stack":null}
{"message":"trying to compare incompatible constructors Single and Str(Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [80, 83, 69, 88, 69, 83, 86, 67], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [255], len: Size { raw: 8 } }, size: Size { raw: 8 }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 8 }) })\r","query_stack":null}
{"message":"tuple_fields called on non-tuple\r","query_stack":null}
{"message":"ty::TyKind::hash_stable() - can't hash a TyVid _#0t.\r","query_stack":null}
{"message":"ty::TyKind::hash_stable() - can't hash a TyVid _#12t.\r","query_stack":null}
{"message":"ty::TyKind::hash_stable() - can't hash a TyVid _#1t.\r","query_stack":null}
{"message":"ty::TyKind::hash_stable() - can't hash a TyVid _#2t.\r","query_stack":null}
{"message":"ty_is_local invoked on unexpected type: [closure@perses_node_priority_with_dfs_delta_reduced_mutant.rs:5:5: 5:9]\r","query_stack":null}
{"message":"type Username should not have metadata, but had Meta(0x0000000000000004)\r","query_stack":null}
{"message":"type metadata for unique ID '324a3be6bacbf95688e06d88c8981eb0' is already in the `TypeMap`!\r","query_stack":null}
{"message":"type metadata for unique ID 'VariantStructType([async block@h3/src/tests/connection.rs:631:22: 646:6], 0, HiddenZst)' is already in the `TypeMap`!\r","query_stack":null}
{"message":"type mismatch when copying!\r","query_stack":null}
{"message":"type parameter `<const_ty>/#1` (<const_ty>/1) out of range when substituting, substs=[usize]\r","query_stack":null}
{"message":"type parameter `A/#1` (A/1) out of range when substituting, substs=[std::boxed::Box<dyn std::future::Future<Output = ()>>]\r","query_stack":null}
{"message":"type parameter `B/#1` (B/1) out of range when substituting, substs=[B]\r","query_stack":null}
{"message":"type parameter `B/#1` (B/1) out of range when substituting, substs=[M1]\r","query_stack":null}
{"message":"type parameter `B/#1` (B/1) out of range when substituting, substs=[MInner]\r","query_stack":null}
{"message":"type parameter `B/#1` (B/1) out of range when substituting, substs=[fn(A, B)]\r","query_stack":null}
{"message":"type parameter `C/#1` (C/1) out of range when substituting, substs=[]\r","query_stack":null}
{"message":"type parameter `C/#2` (C/2) out of range when substituting, substs=[spircer::Name<spircer::Net, C>, ()]\r","query_stack":null}
{"message":"type parameter `CellIdx/#1` (CellIdx/1) out of range when substituting, substs=[Const { ty: usize, kind: Value(Leaf(0x0000000000000400)) }]\r","query_stack":null}
{"message":"type parameter `E/#1` (E/1) out of range when substituting, substs=[()]\r","query_stack":null}
{"message":"type parameter `E/#1` (E/1) out of range when substituting, substs=[Node<K, E>]\r","query_stack":null}
{"message":"type parameter `I/#2` (I/2) out of range when substituting, substs=[()]","query_stack":null}
{"message":"type parameter `Ix/#3` (Ix/3) out of range when substituting, substs=[petgraph::graph::Edge<E, Ix>, std::alloc::Global]\r","query_stack":null}
{"message":"type parameter `M/#0` (M/0) out of range when substituting, substs=[]\r","query_stack":null}
{"message":"type parameter `OpaqueType/#0` (OpaqueType/0) out of range when substituting, substs=[]\r","query_stack":null}
{"message":"type parameter `T/#0` (T/0) out of range when substituting (root type=Some(T)) substs=[]\r","query_stack":null}
{"message":"type parameter `T/#0` (T/0) out of range when substituting (root type=Some(fn() -> usize {is_zst::<T>})) substs=[]\r","query_stack":null}
{"message":"type parameter `T/#0` (T/0) out of range when substituting, substs=[]\r","query_stack":null}
{"message":"type parameter `T/#1` (T/1) out of range when substituting, substs=['_#2r]\r","query_stack":null}
{"message":"type parameter `T/#1` (T/1) out of range when substituting, substs=[()]\r","query_stack":null}
{"message":"type parameter `T/#1` (T/1) out of range when substituting, substs=[(N, T)]\r","query_stack":null}
{"message":"type parameter `T/#1` (T/1) out of range when substituting, substs=[<Self as D<T>>::CType]\r","query_stack":null}
{"message":"type parameter `T/#1` (T/1) out of range when substituting, substs=[S]\r","query_stack":null}
{"message":"type parameter `T/#1` (T/1) out of range when substituting, substs=[Self]\r","query_stack":null}
{"message":"type parameter `T/#1` (T/1) out of range when substituting, substs=[]\r","query_stack":null}
{"message":"type parameter `T/#1` (T/1) out of range when substituting, substs=[_]\r","query_stack":null}
{"message":"type parameter `T/#1` (T/1) out of range when substituting, substs=[std::cell::RefCell<std::vec::Vec<std::rc::Rc<std::cell::RefCell<timely::progress::ChangeBatch<T>>>>>]\r","query_stack":null}
{"message":"type parameter `T/#2` (T/2) out of range when substituting, substs=[FreshTy(0), [type error]]\r","query_stack":null}
{"message":"type parameter `U/#1` (U/1) out of range when substituting, substs=[u32]\r","query_stack":null}
{"message":"type parameter `V/#2` (V/2) out of range when substituting, substs=[fn() -> collections::btree::node::Root<K, V> {collections::btree::node::Root::<K, V>::new_leaf}, ()]\r","query_stack":null}
{"message":"unexpected ambiguity: Canonical { max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [Binder(ProjectionPredicate(ProjectionTy { substs: [F], item_def_id: DefId(2:13762 ~ core[6fcc]::future::future::Future::Output) }, Ty(hyper::Response<hyper::Body>)), []), Binder(TraitPredicate(<F as std::marker::Send>, polarity:Positive), []), Binder(TraitPredicate(<F as futures::Future>, polarity:Positive), []), Binder(ProjectionPredicate(ProjectionTy { substs: [H, (hyper::Request<hyper::Body>, &str)], item_def_id: DefId(2:3521 ~ core[6fcc]::ops::function::FnOnce::Output) }, Ty(F)), [Region(BrNamed(DefId(0:168 ~ jv_fget[6a58]::serve::'_#1), '_))]), Binder(TraitPredicate(<H as std::marker::Sync>, polarity:Positive), []), Binder(TraitPredicate(<H as std::marker::Send>, polarity:Positive), []), Binder(TraitPredicate(<H as std::ops::Fn<(hyper::Request<hyper::Body>, &str)>>, polarity:Positive), [Region(BrNamed(DefId(0:168 ~ jv_fget[6a58]::serve::'_#1), '_))]), Binder(TraitPredicate(<H as std::ops::FnMut<(hyper::Request<hyper::Body>, &str)>>, polarity:Positive), [Region(BrNamed(DefId(0:168 ~ jv_fget[6a58]::serve::'_#1), '_))]), Binder(TraitPredicate(<H as std::ops::FnOnce<(hyper::Request<hyper::Body>, &str)>>, polarity:Positive), [Region(BrNamed(DefId(0:168 ~ jv_fget[6a58]::serve::'_#1), '_))]), Binder(TraitPredicate(<F as std::marker::Sized>, polarity:Positive), []), Binder(TraitPredicate(<H as std::marker::Sized>, polarity:Positive), []), Binder(OutlivesPredicate(H, ReStatic), [])], reveal: UserFacing, constness: NotConst }, value: ProjectionTy { substs: [hyper::Server<hyper::server::conn::AddrIncoming, hyper::service::make::MakeServiceFn<[closure@jv_fget/src/lib.rs:147:51: 147:54]>>], item_def_id: DefId(2:13778 ~ core[6fcc]::future::into_future::IntoFuture::IntoFuture) } } } Canonical { max_universe: U40, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Region(U39) }, CanonicalVarInfo { kind: Region(U39) }, CanonicalVarInfo { kind: Region(U16) }, CanonicalVarInfo { kind: Region(U39) }, CanonicalVarInfo { kind: Region(U39) }, CanonicalVarInfo { kind: Region(U39) }, CanonicalVarInfo { kind: Region(U40) }, CanonicalVarInfo { kind: Region(U40) }, CanonicalVarInfo { kind: Region(U1) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U1, name: BrNamed(DefId(35:1017 ~ hyper[5ea2]::service::make::{impl#2}::'a), 'a) }) }, CanonicalVarInfo { kind: Region(U2) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U2, name: BrNamed(DefId(35:1017 ~ hyper[5ea2]::service::make::{impl#2}::'a), 'a) }) }, CanonicalVarInfo { kind: Region(U3) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U3, name: BrNamed(DefId(35:1017 ~ hyper[5ea2]::service::make::{impl#2}::'a), 'a) }) }, CanonicalVarInfo { kind: Region(U4) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U4, name: BrNamed(DefId(35:1017 ~ hyper[5ea2]::service::make::{impl#2}::'a), 'a) }) }, CanonicalVarInfo { kind: Region(U5) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U5, name: BrNamed(DefId(35:1017 ~ hyper[5ea2]::service::make::{impl#2}::'a), 'a) }) }, CanonicalVarInfo { kind: Region(U6) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U6, name: BrNamed(DefId(35:1017 ~ hyper[5ea2]::service::make::{impl#2}::'a), 'a) }) }, CanonicalVarInfo { kind: Region(U7) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U7, name: BrNamed(DefId(35:1017 ~ hyper[5ea2]::service::make::{impl#2}::'a), 'a) }) }, CanonicalVarInfo { kind: Region(U8) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U8, name: BrNamed(DefId(35:1017 ~ hyper[5ea2]::service::make::{impl#2}::'a), 'a) }) }, CanonicalVarInfo { kind: Region(U9) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U9, name: BrNamed(DefId(35:1017 ~ hyper[5ea2]::service::make::{impl#2}::'a), 'a) }) }, CanonicalVarInfo { kind: Region(U10) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U10, name: BrNamed(DefId(35:1017 ~ hyper[5ea2]::service::make::{impl#2}::'a), 'a) }) }, CanonicalVarInfo { kind: Region(U11) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U11, name: BrNamed(DefId(35:1017 ~ hyper[5ea2]::service::make::{impl#2}::'a), 'a) }) }, CanonicalVarInfo { kind: Region(U12) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U12, name: BrNamed(DefId(35:1017 ~ hyper[5ea2]::service::make::{impl#2}::'a), 'a) }) }, CanonicalVarInfo { kind: Region(U13) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U13, name: BrNamed(DefId(35:1017 ~ hyper[5ea2]::service::make::{impl#2}::'a), 'a) }) }, CanonicalVarInfo { kind: Region(U14) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U14, name: BrNamed(DefId(35:1017 ~ hyper[5ea2]::service::make::{impl#2}::'a), 'a) }) }, CanonicalVarInfo { kind: Region(U15) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U15, name: BrNamed(DefId(35:1017 ~ hyper[5ea2]::service::make::{impl#2}::'a), 'a) }) }, CanonicalVarInfo { kind: Region(U16) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U16, name: BrNamed(DefId(35:1017 ~ hyper[5ea2]::service::make::{impl#2}::'a), 'a) }) }, CanonicalVarInfo { kind: Region(U17) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U17, name: BrNamed(DefId(35:1017 ~ hyper[5ea2]::service::make::{impl#2}::'a), 'a) }) }, CanonicalVarInfo { kind: Region(U18) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U18, name: BrNamed(DefId(35:1017 ~ hyper[5ea2]::service::make::{impl#2}::'a), 'a) }) }, CanonicalVarInfo { kind: Region(U19) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U19, name: BrNamed(DefId(35:1017 ~ hyper[5ea2]::service::make::{impl#2}::'a), 'a) }) }, CanonicalVarInfo { kind: Region(U20) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U20, name: BrNamed(DefId(35:10727 ~ hyper[5ea2]::service::make::{impl#4}::'_), '_) }) }, CanonicalVarInfo { kind: Region(U20) }, CanonicalVarInfo { kind: Region(U21) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U21, name: BrNamed(DefId(35:10727 ~ hyper[5ea2]::service::make::{impl#4}::'_), '_) }) }, CanonicalVarInfo { kind: Region(U22) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U22, name: BrNamed(DefId(35:10727 ~ hyper[5ea2]::service::make::{impl#4}::'_), '_) }) }, CanonicalVarInfo { kind: Region(U22) }, CanonicalVarInfo { kind: Region(U23) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U23, name: BrNamed(DefId(35:10727 ~ hyper[5ea2]::service::make::{impl#4}::'_), '_) }) }, CanonicalVarInfo { kind: Region(U23) }, CanonicalVarInfo { kind: Region(U24) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U24, name: BrNamed(DefId(35:10727 ~ hyper[5ea2]::service::make::{impl#4}::'_), '_) }) }, CanonicalVarInfo { kind: Region(U24) }, CanonicalVarInfo { kind: Region(U25) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U25, name: BrNamed(DefId(35:10727 ~ hyper[5ea2]::service::make::{impl#4}::'_), '_) }) }, CanonicalVarInfo { kind: Region(U25) }, CanonicalVarInfo { kind: Region(U26) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U26, name: BrNamed(DefId(35:10727 ~ hyper[5ea2]::service::make::{impl#4}::'_), '_) }) }, CanonicalVarInfo { kind: Region(U26) }, CanonicalVarInfo { kind: Region(U27) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U27, name: BrNamed(DefId(35:10727 ~ hyper[5ea2]::service::make::{impl#4}::'_), '_) }) }, CanonicalVarInfo { kind: Region(U27) }, CanonicalVarInfo { kind: Region(U28) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U28, name: BrNamed(DefId(35:10727 ~ hyper[5ea2]::service::make::{impl#4}::'_), '_) }) }, CanonicalVarInfo { kind: Region(U28) }, CanonicalVarInfo { kind: Region(U29) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U29, name: BrNamed(DefId(35:10727 ~ hyper[5ea2]::service::make::{impl#4}::'_), '_) }) }, CanonicalVarInfo { kind: Region(U29) }, CanonicalVarInfo { kind: Region(U30) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U30, name: BrNamed(DefId(35:10727 ~ hyper[5ea2]::service::make::{impl#4}::'_), '_) }) }, CanonicalVarInfo { kind: Region(U30) }, CanonicalVarInfo { kind: Region(U31) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U31, name: BrNamed(DefId(35:10727 ~ hyper[5ea2]::service::make::{impl#4}::'_), '_) }) }, CanonicalVarInfo { kind: Region(U31) }, CanonicalVarInfo { kind: Region(U32) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U32, name: BrNamed(DefId(35:10727 ~ hyper[5ea2]::service::make::{impl#4}::'_), '_) }) }, CanonicalVarInfo { kind: Region(U32) }, CanonicalVarInfo { kind: Region(U33) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U33, name: BrNamed(DefId(35:10727 ~ hyper[5ea2]::service::make::{impl#4}::'_), '_) }) }, CanonicalVarInfo { kind: Region(U33) }, CanonicalVarInfo { kind: Region(U34) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U34, name: BrNamed(DefId(35:10727 ~ hyper[5ea2]::service::make::{impl#4}::'_), '_) }) }, CanonicalVarInfo { kind: Region(U34) }, CanonicalVarInfo { kind: Region(U35) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U35, name: BrNamed(DefId(35:10727 ~ hyper[5ea2]::service::make::{impl#4}::'_), '_) }) }, CanonicalVarInfo { kind: Region(U35) }, CanonicalVarInfo { kind: Region(U36) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U36, name: BrNamed(DefId(35:10727 ~ hyper[5ea2]::service::make::{impl#4}::'_), '_) }) }, CanonicalVarInfo { kind: Region(U36) }, CanonicalVarInfo { kind: Region(U37) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U37, name: BrNamed(DefId(35:10727 ~ hyper[5ea2]::service::make::{impl#4}::'_), '_) }) }, CanonicalVarInfo { kind: Region(U37) }, CanonicalVarInfo { kind: Region(U38) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U38, name: BrNamed(DefId(35:10727 ~ hyper[5ea2]::service::make::{impl#4}::'_), '_) }) }, CanonicalVarInfo { kind: Region(U38) }, CanonicalVarInfo { kind: Region(U39) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U39, name: BrNamed(DefId(35:10727 ~ hyper[5ea2]::service::make::{impl#4}::'_), '_) }) }, CanonicalVarInfo { kind: Region(U39) }], value: QueryResponse { var_values: CanonicalVarValues { var_values: [ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon(0) })] }, region_constraints: QueryRegionConstraints { outlives: [Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 1, kind: BrAnon(1) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 1, kind: BrAnon(1) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 2, kind: BrAnon(2) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 2, kind: BrAnon(2) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 1, kind: BrAnon(1) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 1, kind: BrAnon(1) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 2, kind: BrAnon(2) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 2, kind: BrAnon(2) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 3, kind: BrAnon(3) }), ReStatic), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 4, kind: BrAnon(4) }), ReStatic), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 5, kind: BrAnon(5) }), ReStatic), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 6, kind: BrAnon(6) }), ReStatic), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 7, kind: BrAnon(7) }), ReStatic), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 8, kind: BrAnon(8) }), ReStatic), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 9, kind: BrAnon(9) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 10, kind: BrAnon(10) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 11, kind: BrAnon(11) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 12, kind: BrAnon(12) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 13, kind: BrAnon(13) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 14, kind: BrAnon(14) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 15, kind: BrAnon(15) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 16, kind: BrAnon(16) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 17, kind: BrAnon(17) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 18, kind: BrAnon(18) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 19, kind: BrAnon(19) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 20, kind: BrAnon(20) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 21, kind: BrAnon(21) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 22, kind: BrAnon(22) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 23, kind: BrAnon(23) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 24, kind: BrAnon(24) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 25, kind: BrAnon(25) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 26, kind: BrAnon(26) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 27, kind: BrAnon(27) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 28, kind: BrAnon(28) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 29, kind: BrAnon(29) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 30, kind: BrAnon(30) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 31, kind: BrAnon(31) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 32, kind: BrAnon(32) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 33, kind: BrAnon(33) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 34, kind: BrAnon(34) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 35, kind: BrAnon(35) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 36, kind: BrAnon(36) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 37, kind: BrAnon(37) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 38, kind: BrAnon(38) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 39, kind: BrAnon(39) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 40, kind: BrAnon(40) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 41, kind: BrAnon(41) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 42, kind: BrAnon(42) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 43, kind: BrAnon(43) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 44, kind: BrAnon(44) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 45, kind: BrAnon(45) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 46, kind: BrAnon(46) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 47, kind: BrAnon(47) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 48, kind: BrAnon(48) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 49, kind: BrAnon(49) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 48, kind: BrAnon(48) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 50, kind: BrAnon(50) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 51, kind: BrAnon(51) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 52, kind: BrAnon(52) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 53, kind: BrAnon(53) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 54, kind: BrAnon(54) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 53, kind: BrAnon(53) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 55, kind: BrAnon(55) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 56, kind: BrAnon(56) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 57, kind: BrAnon(57) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 56, kind: BrAnon(56) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 58, kind: BrAnon(58) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 59, kind: BrAnon(59) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 60, kind: BrAnon(60) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 59, kind: BrAnon(59) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 61, kind: BrAnon(61) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 62, kind: BrAnon(62) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 63, kind: BrAnon(63) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 62, kind: BrAnon(62) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 64, kind: BrAnon(64) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 65, kind: BrAnon(65) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 66, kind: BrAnon(66) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 65, kind: BrAnon(65) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 67, kind: BrAnon(67) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 68, kind: BrAnon(68) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 69, kind: BrAnon(69) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 68, kind: BrAnon(68) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 70, kind: BrAnon(70) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 71, kind: BrAnon(71) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 72, kind: BrAnon(72) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 71, kind: BrAnon(71) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 73, kind: BrAnon(73) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 74, kind: BrAnon(74) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 75, kind: BrAnon(75) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 74, kind: BrAnon(74) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 76, kind: BrAnon(76) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 77, kind: BrAnon(77) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 78, kind: BrAnon(78) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 77, kind: BrAnon(77) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 79, kind: BrAnon(79) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 80, kind: BrAnon(80) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 81, kind: BrAnon(81) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 80, kind: BrAnon(80) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 82, kind: BrAnon(82) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 83, kind: BrAnon(83) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 84, kind: BrAnon(84) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 83, kind: BrAnon(83) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 85, kind: BrAnon(85) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 86, kind: BrAnon(86) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 87, kind: BrAnon(87) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 86, kind: BrAnon(86) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 88, kind: BrAnon(88) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 89, kind: BrAnon(89) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 90, kind: BrAnon(90) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 89, kind: BrAnon(89) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 91, kind: BrAnon(91) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 92, kind: BrAnon(92) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 93, kind: BrAnon(93) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 92, kind: BrAnon(92) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 94, kind: BrAnon(94) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 95, kind: BrAnon(95) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 96, kind: BrAnon(96) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 95, kind: BrAnon(95) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 97, kind: BrAnon(97) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 98, kind: BrAnon(98) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 99, kind: BrAnon(99) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 98, kind: BrAnon(98) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 100, kind: BrAnon(100) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 101, kind: BrAnon(101) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 102, kind: BrAnon(102) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 101, kind: BrAnon(101) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 103, kind: BrAnon(103) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 104, kind: BrAnon(104) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 105, kind: BrAnon(105) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 104, kind: BrAnon(104) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 10, kind: BrAnon(10) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 9, kind: BrAnon(9) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 12, kind: BrAnon(12) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 11, kind: BrAnon(11) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 14, kind: BrAnon(14) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 13, kind: BrAnon(13) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 16, kind: BrAnon(16) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 15, kind: BrAnon(15) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 18, kind: BrAnon(18) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 17, kind: BrAnon(17) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 20, kind: BrAnon(20) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 19, kind: BrAnon(19) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 22, kind: BrAnon(22) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 21, kind: BrAnon(21) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 24, kind: BrAnon(24) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 23, kind: BrAnon(23) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 26, kind: BrAnon(26) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 25, kind: BrAnon(25) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 28, kind: BrAnon(28) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 27, kind: BrAnon(27) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 30, kind: BrAnon(30) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 29, kind: BrAnon(29) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 32, kind: BrAnon(32) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 31, kind: BrAnon(31) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 34, kind: BrAnon(34) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 33, kind: BrAnon(33) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 36, kind: BrAnon(36) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 35, kind: BrAnon(35) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 38, kind: BrAnon(38) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 37, kind: BrAnon(37) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 40, kind: BrAnon(40) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 39, kind: BrAnon(39) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 42, kind: BrAnon(42) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 41, kind: BrAnon(41) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 44, kind: BrAnon(44) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 43, kind: BrAnon(43) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 46, kind: BrAnon(46) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 45, kind: BrAnon(45) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 48, kind: BrAnon(48) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 47, kind: BrAnon(47) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 48, kind: BrAnon(48) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 49, kind: BrAnon(49) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 51, kind: BrAnon(51) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 50, kind: BrAnon(50) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 53, kind: BrAnon(53) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 52, kind: BrAnon(52) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 53, kind: BrAnon(53) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 54, kind: BrAnon(54) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 56, kind: BrAnon(56) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 55, kind: BrAnon(55) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 56, kind: BrAnon(56) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 57, kind: BrAnon(57) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 59, kind: BrAnon(59) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 58, kind: BrAnon(58) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 59, kind: BrAnon(59) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 60, kind: BrAnon(60) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 62, kind: BrAnon(62) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 61, kind: BrAnon(61) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 62, kind: BrAnon(62) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 63, kind: BrAnon(63) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 65, kind: BrAnon(65) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 64, kind: BrAnon(64) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 65, kind: BrAnon(65) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 66, kind: BrAnon(66) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 68, kind: BrAnon(68) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 67, kind: BrAnon(67) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 68, kind: BrAnon(68) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 69, kind: BrAnon(69) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 71, kind: BrAnon(71) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 70, kind: BrAnon(70) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 71, kind: BrAnon(71) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 72, kind: BrAnon(72) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 74, kind: BrAnon(74) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 73, kind: BrAnon(73) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 74, kind: BrAnon(74) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 75, kind: BrAnon(75) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 77, kind: BrAnon(77) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 76, kind: BrAnon(76) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 77, kind: BrAnon(77) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 78, kind: BrAnon(78) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 80, kind: BrAnon(80) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 79, kind: BrAnon(79) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 80, kind: BrAnon(80) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 81, kind: BrAnon(81) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 83, kind: BrAnon(83) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 82, kind: BrAnon(82) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 83, kind: BrAnon(83) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 84, kind: BrAnon(84) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 86, kind: BrAnon(86) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 85, kind: BrAnon(85) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 86, kind: BrAnon(86) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 87, kind: BrAnon(87) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 89, kind: BrAnon(89) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 88, kind: BrAnon(88) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 89, kind: BrAnon(89) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 90, kind: BrAnon(90) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 92, kind: BrAnon(92) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 91, kind: BrAnon(91) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 92, kind: BrAnon(92) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 93, kind: BrAnon(93) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 95, kind: BrAnon(95) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 94, kind: BrAnon(94) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 95, kind: BrAnon(95) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 96, kind: BrAnon(96) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 98, kind: BrAnon(98) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 97, kind: BrAnon(97) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 98, kind: BrAnon(98) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 99, kind: BrAnon(99) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 101, kind: BrAnon(101) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 100, kind: BrAnon(100) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 101, kind: BrAnon(101) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 102, kind: BrAnon(102) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 104, kind: BrAnon(104) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 103, kind: BrAnon(103) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 104, kind: BrAnon(104) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 105, kind: BrAnon(105) })), []), Binder(OutlivesPredicate(hyper::server::conn::AddrStream, ReStatic), []), Binder(OutlivesPredicate(hyper::Body, ReStatic), []), Binder(OutlivesPredicate(hyper::proto::h2::server::H2Stream<tokio::task::futures::TaskLocalFuture<std::cell::RefCell<std::option::Option<(std::string::String, backtrace::Backtrace)>>, impl futures::Future<Output = std::result::Result<hyper::Response<hyper::Body>, std::convert::Infallible>>>, hyper::Body>, ReStatic), []), Binder(OutlivesPredicate(hyper::server::server::new_svc::NewSvcTask<hyper::server::conn::AddrStream, impl futures::Future<Output = std::result::Result<hyper::service::util::ServiceFn<[closure@jv_fget/src/lib.rs:150:60: 150:74], hyper::Body>, std::convert::Infallible>>, hyper::service::util::ServiceFn<[closure@jv_fget/src/lib.rs:150:60: 150:74], hyper::Body>, hyper::common::exec::Exec, hyper::server::server::NoopWatcher>, ReStatic), []), Binder(OutlivesPredicate(std::io::Error, ReLateBound(DebruijnIndex(1), BoundRegion { var: 3, kind: BrAnon(3) })), []), Binder(OutlivesPredicate(hyper::body::Bytes, ReStatic), []), Binder(OutlivesPredicate(hyper::body::Bytes, ReStatic), []), Binder(OutlivesPredicate(hyper::server::conn::AddrStream, ReStatic), []), Binder(OutlivesPredicate(hyper::Body, ReStatic), []), Binder(OutlivesPredicate(hyper::Body, ReStatic), []), Binder(OutlivesPredicate(hyper::Body, ReStatic), []), Binder(OutlivesPredicate(std::convert::Infallible, ReLateBound(DebruijnIndex(1), BoundRegion { var: 4, kind: BrAnon(4) })), []), Binder(OutlivesPredicate(std::cell::RefCell<std::option::Option<(std::string::String, backtrace::Backtrace)>>, ReStatic), []), Binder(OutlivesPredicate(hyper::proto::h2::server::H2Stream<tokio::task::futures::TaskLocalFuture<std::cell::RefCell<std::option::Option<(std::string::String, backtrace::Backtrace)>>, impl futures::Future<Output = std::result::Result<hyper::Response<hyper::Body>, std::convert::Infallible>>>, hyper::Body>, ReStatic), []), Binder(OutlivesPredicate(hyper::proto::h2::server::H2Stream<tokio::task::futures::TaskLocalFuture<std::cell::RefCell<std::option::Option<(std::string::String, backtrace::Backtrace)>>, impl futures::Future<Output = std::result::Result<hyper::Response<hyper::Body>, std::convert::Infallible>>>, hyper::Body>, ReStatic), []), Binder(OutlivesPredicate(hyper::proto::h2::server::H2Stream<tokio::task::futures::TaskLocalFuture<std::cell::RefCell<std::option::Option<(std::string::String, backtrace::Backtrace)>>, impl futures::Future<Output = std::result::Result<hyper::Response<hyper::Body>, std::convert::Infallible>>>, hyper::Body>, ReStatic), []), Binder(OutlivesPredicate((), ReLateBound(DebruijnIndex(1), BoundRegion { var: 1, kind: BrAnon(1) })), []), Binder(OutlivesPredicate(hyper::body::Bytes, ReStatic), []), Binder(OutlivesPredicate(hyper::Error, ReLateBound(DebruijnIndex(1), BoundRegion { var: 5, kind: BrAnon(5) })), []), Binder(OutlivesPredicate((), ReLateBound(DebruijnIndex(1), BoundRegion { var: 2, kind: BrAnon(2) })), [])], member_constraints: [] }, certainty: Ambiguous, opaque_types: [], value: NormalizationResult { normalized_ty: hyper::Server<hyper::server::conn::AddrIncoming, hyper::service::make::MakeServiceFn<[closure@jv_fget/src/lib.rs:147:51: 147:54]>> } } }","query_stack":null}
{"message":"unexpected ambiguity: Canonical { max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [Binder(TraitPredicate(<Open as std::marker::Send>, polarity:Positive), []), Binder(TraitPredicate(<Open as interface::Opener<P>>, polarity:Positive), []), Binder(TraitPredicate(<Deal as std::marker::Send>, polarity:Positive), []), Binder(TraitPredicate(<Deal as interface::Dealer<P>>, polarity:Positive), []), Binder(TraitPredicate(<Open as std::marker::Sized>, polarity:Positive), []), Binder(TraitPredicate(<Deal as std::marker::Sized>, polarity:Positive), [])], reveal: UserFacing, constness: NotConst }, value: ProjectionTy { substs: [futures_util::sink::Send<'_, async_bincode::tokio::AsyncBincodeWriter<quinn::SendStream, bgv::PublicKey<(bgv::params::phi_8191_mod_2k64::Phi8191Mod2k64, bgv::params::phi_8191_mod_p256::Phi8191ModP256)>, async_bincode::AsyncDestination>, bgv::PublicKey<(bgv::params::phi_8191_mod_2k64::Phi8191Mod2k64, bgv::params::phi_8191_mod_p256::Phi8191ModP256)>>], item_def_id: DefId(2:13778 ~ core[7bb8]::future::into_future::IntoFuture::IntoFuture) } } } Canonical { max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }], value: QueryResponse { var_values: CanonicalVarValues { var_values: [ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon(0) })] }, region_constraints: QueryRegionConstraints { outlives: [Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 0, kind: BrAnon(0) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 0, kind: BrAnon(0) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 0, kind: BrAnon(0) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 0, kind: BrAnon(0) })), [])], member_constraints: [] }, certainty: Ambiguous, opaque_types: [], value: NormalizationResult { normalized_ty: futures_util::sink::Send<'_, async_bincode::tokio::AsyncBincodeWriter<quinn::SendStream, bgv::PublicKey<(bgv::params::phi_8191_mod_2k64::Phi8191Mod2k64, bgv::params::phi_8191_mod_p256::Phi8191ModP256)>, async_bincode::AsyncDestination>, bgv::PublicKey<(bgv::params::phi_8191_mod_2k64::Phi8191Mod2k64, bgv::params::phi_8191_mod_p256::Phi8191ModP256)>> } } }\r","query_stack":null}
{"message":"unexpected ambiguity: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [Binder(TraitPredicate(<B as std::marker::Sized>, polarity:Positive), [])], reveal: UserFacing, constness: NotConst }, value: ProjectionTy { substs: [server_http::extractors::auth::Auth, server_state::ServerState], item_def_id: DefId(21:1472 ~ axum_core[c207]::extract::FromRequestParts::Rejection) } } } Canonical { max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Region(U0) }], value: QueryResponse { var_values: CanonicalVarValues { var_values: [] }, region_constraints: QueryRegionConstraints { outlives: [Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 0, kind: BrAnon(0) }), ReStatic), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 1, kind: BrAnon(1) }), ReStatic), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 2, kind: BrAnon(2) }), ReStatic), [])], member_constraints: [] }, certainty: Ambiguous, opaque_types: [], value: NormalizationResult { normalized_ty: (reqwest::StatusCode, std::string::String) } } }\r","query_stack":null}
{"message":"unexpected ambiguity: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [Binder(TraitPredicate(<__Ctx as std::marker::Sized>, polarity:Positive), []), Binder(TraitPredicate(<<__Ctx as wundergraph::WundergraphContext>::Connection as diesel::Connection>, polarity:Positive), []), Binder(TraitPredicate(<<__Ctx as wundergraph::WundergraphContext>::Connection as std::marker::Send>, polarity:Positive), []), Binder(TraitPredicate(<<__Ctx as wundergraph::WundergraphContext>::Connection as std::marker::Sized>, polarity:Positive), []), Binder(TraitPredicate(<<__Ctx as wundergraph::WundergraphContext>::Connection as diesel::connection::SimpleConnection>, polarity:Positive), []), Binder(TraitPredicate(<__Ctx as wundergraph::WundergraphContext>, polarity:Positive), []), Binder(ProjectionPredicate(ProjectionTy { substs: [<__Ctx as wundergraph::WundergraphContext>::Connection], item_def_id: DefId(20:344 ~ diesel[eab3]::connection::Connection::Backend) }, Ty(diesel::pg::Pg)), []), Binder(OutlivesPredicate(__Ctx, ReStatic), [])], reveal: UserFacing, constness: NotConst }, value: ProjectionTy { substs: [wundergraph::query_builder::selection::filter::FilterConverter<graphql::filemanagement::FileKindPlugin, diesel::pg::Pg, __Ctx>], item_def_id: DefId(65:2325 ~ wundergraph[1cef]::query_builder::selection::filter::filter_helper::CreateFilter::Filter) } } } Canonical { max_universe: U2, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Region(U1) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U1, name: BrNamed(DefId(65:4429 ~ wundergraph[1cef]::query_builder::types::wundergraph_value::{impl#10}::'a), 'a) }) }, CanonicalVarInfo { kind: Region(U2) }, CanonicalVarInfo { kind: PlaceholderRegion(Placeholder { universe: U2, name: BrNamed(DefId(65:4429 ~ wundergraph[1cef]::query_builder::types::wundergraph_value::{impl#10}::'a), 'a) }) }], value: QueryResponse { var_values: CanonicalVarValues { var_values: [] }, region_constraints: QueryRegionConstraints { outlives: [Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 0, kind: BrAnon(0) }), ReStatic), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 1, kind: BrAnon(1) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 2, kind: BrAnon(2) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 3, kind: BrAnon(3) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 4, kind: BrAnon(4) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 2, kind: BrAnon(2) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 1, kind: BrAnon(1) })), []), Binder(OutlivesPredicate(ReLateBound(DebruijnIndex(1), BoundRegion { var: 4, kind: BrAnon(4) }), ReLateBound(DebruijnIndex(1), BoundRegion { var: 3, kind: BrAnon(3) })), []), Binder(OutlivesPredicate(diesel::pg::Pg, ReStatic), []), Binder(OutlivesPredicate(schema::file_kind_plugins::table, ReStatic), []), Binder(OutlivesPredicate(__Ctx, ReStatic), [])], member_constraints: [] }, certainty: Ambiguous, opaque_types: [], value: NormalizationResult { normalized_ty: [type error] } } }\r","query_stack":null}
{"message":"unexpected ambiguity: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, constness: NotConst }, value: ProjectionTy { substs: [DefaultAllocator], item_def_id: DefId(0:4 ~ issue_74244[107b]::Allocator::Buffer) } } } Canonical { max_universe: U0, variables: [], value: QueryResponse { var_values: CanonicalVarValues { var_values: [] }, region_constraints: QueryRegionConstraints { outlives: [], member_constraints: [] }, certainty: Ambiguous, opaque_types: [], value: NormalizationResult { normalized_ty: () } } }\r","query_stack":null}
{"message":"unexpected anon const res PrimTy(Str) in path: Path { span: src/main.rs:14:17: 14:23 (#0), res: PrimTy(Str), segments: [PathSegment { ident: str#0, hir_id: Some(HirId { owner: DefId(0:10 ~ toffee[3d1d]::main[0]), local_id: 9 }), res: Some(Err), args: Some(GenericArgs { args: [Const(ConstArg { value: AnonConst { hir_id: HirId { owner: DefId(0:10 ~ toffee[3d1d]::main[0]), local_id: 7 }, body: BodyId { hir_id: HirId { owner: DefId(0:10 ~ toffee[3d1d]::main[0]), local_id: 8 } } }, span: src/main.rs:14:21: 14:22 (#0) })], bindings: [], parenthesized: false }), infer_args: false }] }\r","query_stack":null}
{"message":"unexpected anon const res PrimTy(Uint(Usize)) in path: Path { span: reduced_mutant.rs:7:12: 7:23 (#0), res: PrimTy(Uint(Usize)), segments: [PathSegment { ident: usize#0, hir_id: Some(HirId { owner: DefId(0:3 ~ reduced_mutant[317d]::main), local_id: 57 }), res: Some(Err), args: Some(GenericArgs { args: [Const(ConstArg { value: AnonConst { hir_id: HirId { owner: DefId(0:3 ~ reduced_mutant[317d]::main), local_id: 54 }, body: BodyId { hir_id: HirId { owner: DefId(0:3 ~ reduced_mutant[317d]::main), local_id: 56 } } }, span: reduced_mutant.rs:7:18: 7:22 (#0) })], bindings: [], parenthesized: false }), infer_args: false }] }\r","query_stack":null}
{"message":"unexpected bound ty in binder: BoundTy { var: 0, kind: Anon(0) }\r","query_stack":null}
{"message":"unexpected bound ty in binder: BoundTy { var: 0, kind: Param(\"T\") }\r","query_stack":null}
{"message":"unexpected bound ty in binder: BoundTy { var: 0, kind: Param(DefId(0:5 ~ 2f364877ae32a51855925609c897ffa9f739c835[5b1e]::main::{closure#0}::main), \"main\") }\r","query_stack":null}
{"message":"unexpected bound ty in binder: BoundTy { var: 1, kind: Param(\"F\") }\r","query_stack":null}
{"message":"unexpected bound var resolution for HirId(DefId(0:3 ~ 369F0080915517E17111EE245F5EA4DFDB20ACBA83676D6A364219263BA449A5[c773]::a).9): None\r","query_stack":null}
{"message":"unexpected const Const { ty: usize, val: Bound(DebruijnIndex(0), 1) }\r","query_stack":null}
{"message":"unexpected const parent path Expr(Expr { hir_id: HirId { owner: DefId(0:5 ~ reduced_mutant[317d]::f), local_id: 7 }, kind: Struct(TypeRelative(Ty { hir_id: HirId { owner: DefId(0:5 ~ reduced_mutant[317d]::f), local_id: 2 }, kind: Path(Resolved(None, Path { span: reduced_mutant.rs:3:5: 3:14 (#0), res: Def(Struct, DefId(0:3 ~ reduced_mutant[317d]::S)), segments: [PathSegment { ident: S#0, hir_id: Some(HirId { owner: DefId(0:5 ~ reduced_mutant[317d]::f), local_id: 1 }), res: Some(Err), args: None, infer_args: true }] })), span: reduced_mutant.rs:3:5: 3:14 (#0) }, PathSegment { ident: A#0, hir_id: Some(HirId { owner: DefId(0:5 ~ reduced_mutant[317d]::f), local_id: 6 }), res: Some(Err), args: Some(GenericArgs { args: [Const(ConstArg { value: AnonConst { hir_id: HirId { owner: DefId(0:5 ~ reduced_mutant[317d]::f), local_id: 3 }, body: BodyId { hir_id: HirId { owner: DefId(0:5 ~ reduced_mutant[317d]::f), local_id: 5 } } }, span: reduced_mutant.rs:3:12: 3:13 (#0) })], bindings: [], parenthesized: false }), infer_args: false }), [], None), attrs: ThinVec(None), span: reduced_mutant.rs:3:5: 3:17 (#0) })\r","query_stack":null}
{"message":"unexpected const parent path Ty(Ty { hir_id: HirId { owner: DefId(0:9 ~ playground[a09e]::Device[0]::create_buffer[0]), local_id: 8 }, kind: Path(TypeRelative(Ty { hir_id: HirId { owner: DefId(0:9 ~ playground[a09e]::Device[0]::create_buffer[0]), local_id: 10 }, kind: Path(Resolved(None, Path { span: src/main.rs:10:55: 10:74 (#0), res: SelfTy(Some(DefId(0:5 ~ playground[a09e]::Device[0])), None), segments: [PathSegment { ident: Self#0, hir_id: Some(HirId { owner: DefId(0:9 ~ playground[a09e]::Device[0]::create_buffer[0]), local_id: 9 }), res: Some(SelfTy(Some(DefId(0:5 ~ playground[a09e]::Device[0])), None)), args: None, infer_args: false }] })), span: src/main.rs:10:55: 10:74 (#0) }, PathSegment { ident: Buffer#0, hir_id: Some(HirId { owner: DefId(0:9 ~ playground[a09e]::Device[0]::create_buffer[0]), local_id: 16 }), res: Some(Err), args: Some(GenericArgs { args: [Const(ConstArg { value: AnonConst { hir_id: HirId { owner: DefId(0:9 ~ playground[a09e]::Device[0]::create_buffer[0]), local_id: 11 }, body: BodyId { hir_id: HirId { owner: DefId(0:9 ~ playground[a09e]::Device[0]::create_buffer[0]), local_id: 15 } } }, span: src/main.rs:10:68: 10:73 (#0) })], bindings: [], parenthesized: false }), infer_args: false })), span: src/main.rs:10:55: 10:74 (#0) }\r","query_stack":null}
{"message":"unexpected inference var Const { ty: usize, kind: Infer(Var(_#0c)) }\r","query_stack":null}
{"message":"unexpected meta-item MetaItem(MetaItem { path: Path { span: perses_node_priority_with_dfs_delta_reduced_mutant.rs:2:30: 2:56 (#0), segments: [PathSegment { ident: rustc_then_this_would_need#0, id: NodeId(4294967040), args: None }], tokens: None }, kind: List([]), span: perses_node_priority_with_dfs_delta_reduced_mutant.rs:2:30: 2:58 (#0) })\r","query_stack":null}
{"message":"unexpected non-type Node::GenericParam: Lifetime { kind: Explicit }\r","query_stack":null}
{"message":"unexpected non-type Node::GenericParam: Type { default: None, synthetic: false }\r","query_stack":null}
{"message":"unexpected parent of trait or impl item or item not found: OpaqueTy(OpaqueTy { generics: Generics { params: [], predicates: [], has_where_clause_predicates: false, where_clause_span: src/main.rs:7:23: 7:33 (#0), span: src/main.rs:7:23: 7:33 (#0) }, bounds: [LangItemTrait(Future, src/main.rs:7:23: 7:33 (#0), HirId { owner: DefId(0:8 ~ playground[77cf]::Foo::baz::{opaque#0}), local_id: 3 }, GenericArgs { args: [], bindings: [TypeBinding { hir_id: HirId { owner: DefId(0:8 ~ playground[77cf]::Foo::baz::{opaque#0}), local_id: 2 }, ident: Output#0, gen_args: GenericArgs { args: [], bindings: [], parenthesized: false, span_ext: no-location (#0) }, kind: Equality { term: Ty(Ty { hir_id: HirId { owner: DefId(0:8 ~ playground[77cf]::Foo::baz::{opaque#0}), local_id: 1 }, kind: OpaqueDef(ItemId { def_id: DefId(0:9 ~ playground[77cf]::Foo::baz::{opaque#0}::{opaque#0}) }, [], true), span: src/main.rs:7:23: 7:33 (#0) }) }, span: src/main.rs:7:23: 7:33 (#0) }], parenthesized: false, span_ext: no-location (#0) })], origin: AsyncFn(DefId(0:7 ~ playground[77cf]::Foo::baz)), in_trait: true })\r","query_stack":null}
{"message":"unexpected path\r","query_stack":null}
{"message":"unexpected path: def=Foo substs=[_] path=Path { span: src\\main.rs:14:9: 14:13 (#0), res: SelfTy { trait_: None, alias_to: Some((DefId(0:12 ~ crash_test[4dc2]::{impl#0}), false)) }, segments: [PathSegment { ident: Self#0, hir_id: Some(HirId { owner: DefId(0:15 ~ crash_test[4dc2]::{impl#0}::bar), local_id: 5 }), res: Some(SelfTy { trait_: None, alias_to: Some((DefId(0:12 ~ crash_test[4dc2]::{impl#0}), false)) }), args: None, infer_args: true }] }\r","query_stack":null}
{"message":"unexpected path: def=alloc::ffi::c_str::CString substs=[] path=Path { span: ./510c9ceef0960a8c8b6a20e3625ee6c2e10b4052.rs:27:23: 27:30 (#0), res: Def(TyAlias, DefId(1:2774 ~ std[4f4f]::ffi::CString)), segments: [PathSegment { ident: CString#0, hir_id: Some(HirId { owner: DefId(0:28 ~ 510c9ceef0960a8c8b6a20e3625ee6c2e10b4052[d1fc]::imp::{impl#0}::new), local_id: 22 }), res: Some(Err), args: None, infer_args: true }] }\r","query_stack":null}
{"message":"unexpected path: def=clap::App substs=['_#1r] path=Path { span: examples/bug.rs:26:19: 26:26 (#0), res: Def(TyAlias, DefId(154:881 ~ clap[cfd3]::build::command::Command)), segments: [PathSegment { ident: Command#0, hir_id: Some(HirId { owner: DefId(0:21 ~ bug[6e6c]::main), local_id: 11 }), res: Some(Err), args: Some(GenericArgs { args: [Lifetime(Lifetime { hir_id: HirId { owner: DefId(0:21 ~ bug[6e6c]::main), local_id: 10 }, span: examples/bug.rs:26:19: 26:26 (#0), name: Implicit })], bindings: [], parenthesized: false, span_ext: examples/bug.rs:26:31: 26:31 (#0) }), infer_args: true }] }\r","query_stack":null}
{"message":"unexpected path: def=fixed::FixedU128 substs=[_] path=Path { span: src/processor/------.rs:81:24: 81:30 (#0), res: Def(TyAlias, DefId(48:2684 ~ fixed[c9e8]::types::U64F64)), segments: [PathSegment { ident: U64F64#0, hir_id: Some(HirId { owner: DefId(0:269 ~ wasm_lib[ee1e]::processor::redeem_scoin::redeem_scoin), local_id: 289 }), res: Some(Err), args: None, infer_args: true }] }\r","query_stack":null}
{"message":"unexpected path: def=hashbrown::HashMap substs=[_, _, ahash::RandomState, hashbrown::raw::alloc::inner::Global] path=Path { span: src/main.rs:3:15: 3:22 (#0), res: Def(TyAlias, DefId(0:3 ~ playground[3ae5]::HashMap)), segments: [PathSegment { ident: HashMap#0, hir_id: Some(HirId { owner: DefId(0:6 ~ playground[3ae5]::main), local_id: 2 }), res: Some(Err), args: None, infer_args: true }] }\r","query_stack":null}
{"message":"unexpected path: def=iced_native::widget::row::Row substs=['_#1r, _, _] path=Path { span: src/main.rs:40:9: 40:12 (#0), res: Def(TyAlias, DefId(20:185 ~ iced[6c0f]::widget::Row)), segments: [PathSegment { ident: Row#0, hir_id: Some(HirId { owner: DefId(0:34 ~ rusted_content[7db5]::{impl#0}::view), local_id: 6 }), res: Some(Err), args: Some(GenericArgs { args: [Lifetime(Lifetime { hir_id: HirId { owner: DefId(0:34 ~ rusted_content[7db5]::{impl#0}::view), local_id: 5 }, span: src/main.rs:40:9: 40:12 (#0), name: Implicit })], bindings: [], parenthesized: false, span_ext: src/main.rs:40:17: 40:17 (#0) }), infer_args: true }] }\r","query_stack":null}
{"message":"unexpected path: def=ndarray::ArrayBase substs=[_, _] path=Path { span: src/main.rs:320:18: 320:31 (#0), res: Def(TyAlias, DefId(21:195 ~ ndarray[f54d]::aliases::Array2)), segments: [PathSegment { ident: Array2#0, hir_id: Some(HirId { owner: DefId(0:268 ~ traderust[1321]::populate_navigable_distances), local_id: 125 }), res: Some(Err), args: Some(GenericArgs { args: [Type(Ty { hir_id: HirId { owner: DefId(0:268 ~ traderust[1321]::populate_navigable_distances), local_id: 123 }, kind: Path(Resolved(None, Path { span: src/main.rs:320:27: 320:30 (#0), res: PrimTy(Uint(U16)), segments: [PathSegment { ident: u16#0, hir_id: Some(HirId { owner: DefId(0:268 ~ traderust[1321]::populate_navigable_distances), local_id: 124 }), res: Some(Err), args: None, infer_args: false }] })), span: src/main.rs:320:27: 320:30 (#0) })], bindings: [], parenthesized: false, span_ext: src/main.rs:320:26: 320:31 (#0) }), infer_args: false }] }\r","query_stack":null}
{"message":"unexpected path: def=ndarray::ArrayBase substs=[_, _] path=Path { span: src/main.rs:7:24: 7:27 (#0), res: Def(TyAlias, DefId(20:11 ~ wyrm[2d3a]::Arr)), segments: [PathSegment { ident: Arr#0, hir_id: Some(HirId { owner: DefId(0:10 ~ rust[461b]::main), local_id: 40 }), res: Some(Err), args: None, infer_args: true }] }\r","query_stack":null}
{"message":"unexpected path: def=skia_safe::RCHandle substs=[skia_bindings::bindings::SkSurface] path=Path { span: src/main.rs:6:23: 6:30 (#0), res: Def(TyAlias, DefId(20:5421 ~ skia_safe[b049]::core::surface::Surface)), segments: [PathSegment { ident: Surface#0, hir_id: Some(HirId { owner: DefId(0:30 ~ skia[a9b6]::main), local_id: 3 }), res: Some(Err), args: None, infer_args: true }] }\r","query_stack":null}
{"message":"unexpected path: def=smallvec::alloc::ffi::CString substs=[] path=Path { span: src\\vulkan_6400.rs:146:28: 146:35 (#0), res: Def(TyAlias, DefId(1:2774 ~ std[2cf3]::ffi::CString)), segments: [PathSegment { ident: CString#0, hir_id: Some(HirId { owner: DefId(0:194 ~ vulkan__march__22[69e8]::vulkan_6400::vulkan_routine_64\r","query_stack":null}
{"message":"unexpected path: def=smallvec::alloc::ffi::CString substs=[] path=Path { span: src\\vulkan_8400.rs:139:28: 139:35 (#0), res: Def(TyAlias, DefId(1:2774 ~ std[e88d]::ffi::CString)), segments: [PathSegment { ident: CString#0, hir_id: Some(HirId {\r","query_stack":null}
{"message":"unexpected path: def=std::collections::HashMap substs=[_, _, _] path=Path { span: src/main.rs:22:30: 22:33 (#0), res: Def(TyAlias, DefId(0:20 ~ tmp[b4a0]::Map)), segments: [PathSegment { ident: Map#0, hir_id: Some(HirId { owner: DefId(0:23 ~ tmp[b4a0]::main), local_id: 6 }), res: Some(Err), args: None, infer_args: true }] }\r","query_stack":null}
{"message":"unexpected region in outlives inference: ReErased\r","query_stack":null}
{"message":"unexpected region in query response: `ReError`","query_stack":null}
{"message":"unexpected region kind in opaque type: RePlaceholder(Placeholder { universe: U2, name: BrNamed(DefId(0:11 ~ playground[302b]::g::{opaque#0}::'a), 'a) })\r","query_stack":null}
{"message":"unexpected region kind in opaque type: RePlaceholder(Placeholder { universe: U3, name: BrNamed(DefId(0:15 ~ playground[419e]::FnType::{opaque#0}::'_), '_) })\r","query_stack":null}
{"message":"unexpected res Err in variant_of_res\r","query_stack":null}
{"message":"unexpected rib kind: ConstGeneric\r","query_stack":null}
{"message":"unexpected sort of node in fn_sig()","query_stack":null}
{"message":"unexpected sort of node in fn_sig(): Item(Item { ident: A#0, owner_id: DefId(0:3 ~ ice_min[f0b4]::A), kind: Static(Ty { hir_id: HirId(DefId(0:3 ~ ice_min[f0b4]::A).1), kind: Path(Resolved(None, Path { span: ice_min.rs:2:11: 2:17 (#0), res: Err, segments: [PathSegment { ident: System#0, hir_id: HirId(DefId(0:3 ~ ice_min[f0b4]::A).2), res: Err, args: None, infer_args: false }] })), span: ice_min.rs:2:11: 2:17 (#0) }, Not, BodyId { hir_id: HirId(DefId(0:3 ~ ice_min[f0b4]::A).3) }), span: ice_min.rs:2:1: 2:27 (#0), vis_span: ice_min.rs:2:1: 2:1 (#0) })\r","query_stack":null}
{"message":"unexpected sort of node in fn_sig(): Item(Item { ident: XEmpty2#0, def_id: DefId(0:3 ~ perses_node_priority_with_dfs_delta_reduced_mutant[8787]::XEmpty2), kind: Struct(Unit(HirId { owner: DefId(0:3 ~ perses_node_priority_with_dfs_delta_reduced_mutant[8787]::XEmpty2), local_id: 1 }), Generics { params: [], where_clause: WhereClause { predicates: [], span: perses_node_priority_with_dfs_delta_reduced_mutant.rs:3:15: 3:15 (#0) }, span: perses_node_priority_with_dfs_delta_reduced_mutant.rs:3:15: 3:15 (#0) }), vis: Spanned { node: Inherited, span: perses_node_priority_with_dfs_delta_reduced_mutant.rs:3:1: 3:1 (#0) }, span: perses_node_priority_with_dfs_delta_reduced_mutant.rs:3:1: 3:16 (#0) })\r","query_stack":null}
{"message":"unexpected sort of node in fn_sig(): Item(Item { ident: _B#0, owner_id: OwnerId { def_id: DefId(0:3 ~ a[36ea]::_B) }, kind: Static(Ty { hir_id: HirId { owner: OwnerId { def_id: DefId(0:3 ~ a[36ea]::_B) }, local_id: 1 }, kind: Tup([]), span: a.rs:2:12: 2:14 (#0) }, Not, BodyId { hir_id: HirId { owner: OwnerId { def_id: DefId(0:3 ~ a[36ea]::_B) }, local_id: 2 } }), span: a.rs:2:1: 2:20 (#0), vis_span: a.rs:2:1: 2:1 (#0) })\r","query_stack":null}
{"message":"unexpected sort of node in fn_sig(): TraitItem(TraitItem { ident: FACTORY#0, owner_id: OwnerId { def_id: DefId(0:489 ~ librashader_runtime_gl[c33d]::util::GlUniformScalar::FACTORY) }, generics: Generics { params: [], predicates: [], has_where_clause_predicates: false, where_clause_span: no-location (#0), span: no-location (#0) }, kind: \r","query_stack":null}
{"message":"unexpected sort of node in fn_sig(): TraitItem(TraitItem { ident: call#0, def_id: DefId(0:5 ~ 83471_2[9b65]::MyFn::call), generics: Generics { params: [], where_clause: WhereClause { predicates: [], span: no-location (#0) }, span: no-location (#0) }, kind: Const(Ty { hir_id: HirId { owner: DefId(0:5 ~ 83471_2[9b65]::MyFn::call), local_id: 1 }, kind: Path(Resolved(None, Path { span: ./83471-2.rs:7:17: 7:20 (#0), res: PrimTy(Int(I32)), segments: [PathSegment { ident: i32#0, hir_id: Some(HirId { owner: DefId(0:5 ~ 83471_2[9b65]::MyFn::call), local_id: 2 }), res: Some(Err), args: None, infer_args: false }] })), span: ./83471-2.rs:7:17: 7:20 (#0) }, Some(BodyId { hir_id: HirId { owner: DefId(0:5 ~ 83471_2[9b65]::MyFn::call), local_id: 3 } })), span: ./83471-2.rs:7:5: 7:26 (#0) })\r","query_stack":null}
{"message":"unexpected type during structural-match checking: [closure@bug.rs:4:13: 4:18]\r","query_stack":null}
{"message":"unexpected type encountered in variance inference: FreshTy(0)\r","query_stack":null}
{"message":"unexpected type encountered in variance inference: _\r","query_stack":null}
{"message":"unexpected type in foreign function: <() as Foo>::Bar\r","query_stack":null}
{"message":"unexpected type in foreign function: [type error]\r","query_stack":null}
{"message":"unexpected type: FreshTy(0)\r","query_stack":null}
{"message":"unexpected unsized tail: hyper::server::conn::spawn_all::State<hyper::server::conn::AddrStream, std::future::from_generator::GenFuture<[static generator@src/main.rs:40:20: 40:48]>, warp::filter::service::FilteredService<warp::cors::internal::CorsFilter<warp::filter::or::Or<warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::path::end::{closure#0}]>, [closure@src/main.rs:32:39: 32:71]>, warp::filter::map::Map<warp::filter::and::And<warp::filter::and::And<warp::path::Exact<warp::path::internal::Opaque<&str>>, warp::filter::map::Map<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::get::{closure#0}]>::{closure#0}]>, warp::filter::untuple_one::UntupleOne<warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::header::header2<headers::common::connection::Connection>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<headers::common::connection::Connection, warp::Rejection>>>::{closure#0}]>, [closure@warp::ws::{closure#0}]>>>, warp::filter::FilterFn<[closure@warp::header::exact_ignore_case::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::header::exact::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::header::header2<headers::common::sec_websocket_key::SecWebsocketKey>::{closure#0}], futures_util::future::ready::Ready<std::result::Result<headers::common::sec_websocket_key::SecWebsocketKey, warp::Rejection>>>::{closure#0}]>>, warp::filter::FilterFn<[closure@warp::filter::filter_fn_one<[closure@warp::ws::on_upgrade::{closure#0}], futures_util::future::ready::Ready<std::result::Result<std::option::Option<hyper::upgrade::OnUpgrade>, warp::Rejection>>>::{closure#0}]>>, [closure@warp::ws::{closure#1}]>>, warp::filter::map::Map<warp::filters::any::Any, [closure@src/main.rs:25:33: 25:54]>>, [closure@src/main.rs:30:14: 30:83]>>>>, hyper::common::exec::Exec, hyper::server::conn::spawn_all::NoopWatcher>\r","query_stack":null}
{"message":"unexpected unsized tail: hyper::server::server::new_svc::State<hyper::server::conn::AddrStream, futures::future::Ready<std::result::Result<warp::filter::service::FilteredService<warp::trace::internal::WithTrace<[closure@warp::trace::request::{closure#0}], warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::path::end::{closure#0}]>, [closure@src/main.rs:11:18: 11:20]>>>, std::convert::Infallible>>, warp::filter::service::FilteredService<warp::trace::internal::WithTrace<[closure@warp::trace::request::{closure#0}], warp::filter::map::Map<warp::filter::FilterFn<[closure@warp::path::end::{closure#0}]>, [closure@src/main.rs:11:18: 11:20]>>>, hyper::common::exec::Exec, hyper::server::server::NoopWatcher>\r","query_stack":null}
{"message":"univariant: field #2 of `(dyn AsRef<[type error]>, u8)` comes after unsized field\r","query_stack":null}
{"message":"unknown intrinsic 'rustc_peek'\r","query_stack":null}
{"message":"unmatched subst and hir arg: found &mut BuyMarketMultiplier vs Lifetime(lifetime(HirId { owner: DefId(0:23 ~ playground[2f39]::{impl#3}::buy_lock::{opaque#0}), local_id: 2 }: '_))\r","query_stack":null}
{"message":"upvar `self` borrowed, but not mutably\r","query_stack":null}
{"message":"upvar_tys called before capture types are inferred\r","query_stack":null}
{"message":"var types encountered in super_relate_consts: Const { ty: usize, kind: Infer(Var(_#0c)) } Const { ty: usize, kind: Param(N/#1) }","query_stack":null}
{"message":"var types encountered in super_relate_tys\r","query_stack":null}
{"message":"vtable not supported on type std::pin::Pin<&mut dyn futures::Future<Output = i32>>\r","query_stack":null}
{"message":"vtable not supported on type std::pin::Pin<&mut dyn futures::Future<Output = std::result::Result<tokio::sync::mpsc::Permit<std::string::String>, tokio::sync::mpsc::error::SendError<()>>>>\r","query_stack":null}
{"message":"while adjusting\r","query_stack":null}
{"message":"while adjusting Expr { hir_id: HirI\r","query_stack":null}
{"message":"while adjusting Expr { hir_id: HirId { owner: DefId(0:11 ~ rust_compiler_bug[815d]::{impl#0}::set_value), local_id: 9 }, kind: Path(Resolved(None, Path { span: src/main.rs:16:40: 16:44 (#0), res: Local(HirId { owner: DefId(0:11 ~ rust_compiler_bug[815d]::{impl#0}::set_value), local_id: 2 }), segments: [PathSegment { ident: self#0, hir_id: Some(HirId { owner: DefId(0:11 ~ rust_compiler_bug[815d]::{impl#0}::set_value), local_id: 8 }), res: Some(Local(HirId { owner: DefId(0:11 ~ rust_compiler_bug[815d]::{impl#0}::set_value), local_id: 2 })), args: None, infer_args: true }] })), span: src/main.rs:16:40: 16:44 (#0) }, can't compose [Deref(None) -> Foo] and [Deref(None) -> Foo]\r","query_stack":null}
{"message":"while adjusting Expr { hir_id: HirId { owner: DefId(0:11 ~ testcase[ccae]::{impl#0}::or), local_id: 8 }, kind: Path(Resolved(None, Path { span: src/main.rs:12:24: 12:28 (#0), res: Local(HirId { owner: DefId(0:11 ~ testcase[ccae]::{impl#0}::or), local_id: 2 }), segments: [PathSegment { ident: self#0, hir_id: Some(HirId { owner: DefId(0:11 ~ testcase[ccae]::{impl#0}::or), local_id: 7 }), res: Some(Local(HirId { owner: DefId(0:11 ~ testcase[ccae]::{impl#0}::or), local_id: 2 })), args: None, infer_args: true }] })), span: src/main.rs:12:24: 12:28 (#0) }, can't compose [Deref(None) -> BuildPlanBuilder] and [Deref(None) -> BuildPlanBuilder]\r","query_stack":null}
{"message":"while adjusting Expr { hir_id: HirId { owner: DefId(0:121 ~ blitzserver[e8ee]::frontend::games::de_map_to_scalar::{impl#0}::visit_seq), local_id: 60 }, kind: Path(Resolved(None, Path { span: src/frontend/games.rs:110:29: 110:30 (#0), res: Local(HirId { owner: DefId(0:121 ~ blitzserver[e8ee]::frontend::games::de_map_to_scalar::{impl#0}::visit_seq), local_id: 2 }), segments: [PathSegment { ident: v#0, hir_id: Some(HirId { owner: DefId(0:121 ~ blitzserver[e8ee]::frontend::games::de_map_to_scalar::{impl#0}::visit_seq), local_id: 59 }), res: Some(Local(HirId { owner: DefId(0:121 ~ blitzserver[e8ee]::frontend::games::de_map_to_scalar::{impl#0}::visit_seq), local_id: 2 })), args: None, infer_args: true }] })), attrs: ThinVec(None), span: src/frontend/games.rs:110:29: 110:30 (#0) }, can't compose [Borrow(Ref('_#20r, Mut { allow_two_phase_borrow: Yes })) -> &mut A] and [Borrow(Ref('_#23r, Mut { allow_two_phase_borrow: Yes })) -> &mut A]\r","query_stack":null}
{"message":"while adjusting Expr { hir_id: HirId { owner: DefId(0:133 ~ rpass[9674]::session::authorized::{impl#0}::get_record), local_id: 164 }, kind: AddrOf(Ref, Not, Expr { hir_id: HirId { owner: DefId(0:133 ~ rpass[9674]::session::authorized::{impl#0}::get_record), local_id: 163 }, kind: Path(Resolved(None, Path { span: rpass/src/session/authorized.rs:138:33: 138:41 (#0), res: Local(HirId { owner: DefId(0:133 ~ rpass[9674]::session::authorized::{impl#0}::get_record), local_id: 134 }), segments: [PathSegment { ident: response#0, hir_id: Some(HirId { owner: DefId(0:133 ~ rpass[9674]::session::authorized::{impl#0}::get_record), local_id: 162 }), res: Some(Local(HirId { owner: DefId(0:133 ~ rpass[9674]::session::authorized::{impl#0}::get_record), local_id: 134 })), args: None, infer_args: true }] })), span: rpass/src/session/authorized.rs:138:33: 138:41 (#0) }), span: rpass/src/session/authorized.rs:138:32: 138:41 (#0) }, can't compose [Deref(None) -> String, Deref(Some(OverloadedDeref { region: '_#60r, mutbl: Not, span: rpass/src/session/authorized.rs:138:32: 138:41 (#0) })) -> str, Borrow(Ref('_#58r, Not)) -> &str] and [Deref(None) -> String, Deref(Some(OverloadedDeref { region: '_#64r, mutbl: Not, span: rpass/src/session/authorized.rs:138:32: 138:41 (#0) })) -> str, Borrow(Ref('_#62r, Not)) -> &str]\r","query_stack":null}
{"message":"while adjusting Expr { hir_id: HirId { owner: DefId(0:141 ~ linux_kernel_module[2b6b]::file_operations[0]::{{impl}}[1]::VTAB\r","query_stack":null}
{"message":"while adjusting Expr { hir_id: HirId { owner: DefId(0:15 ~ playground[29ea]::{impl#0}::with_a), local_id: 6 }, kind: Path(Resolved(None, Path { span: src/main.rs:19:15: 19:18 (#0), res: Def(Static, DefId(0:13 ~ playground[29ea]::BAR)), segments: [PathSegment { ident: BAR#0, hir_id: Some(HirId { owner: DefId(0:15 ~ playground[29ea]::{impl#0}::with_a), local_id: 5 }), res: Some(Err), args: None, infer_args: true }] })), span: src/main.rs:19:15: 19:18 (#0) }, can't compose [Borrow(Ref('_#0r, Not)) -> &once_cell::sync::OnceCell<Bar>] and [Borrow(Ref('_#3r, Not)) -> &once_cell::sync::OnceCell<Bar>]\r","query_stack":null}
{"message":"while adjusting Expr { hir_id: HirId { owner: DefId(0:18 ~ temp[29dd]::{impl#1}::run), local_id: 70 }, kind: Path(Resolved(None, Path { span: src/main.rs:22:43: 22:45 (#0), res: Local(HirId { owner: DefId(0:18 ~ temp[29dd]::{impl#1}::run), local_id: 12 }), segments: [PathSegment { ident: xx#0, hir_id: Some(HirId { owner: DefId(0:18 ~ temp[29dd]::{impl#1}::run), local_id: 69 }), res: Some(Local(HirId { owner: DefId(0:18 ~ temp[29dd]::{impl#1}::run), local_id: 12 })), args: None, infer_args: true }] })), span: src/main.rs:22:43: 22:45 (#0) }, can't compose [Deref(None) -> X] and [Deref(None) -> X]\r","query_stack":null}
{"message":"while adjusting Expr { hir_id: HirId { owner: DefId(0:21 ~ deer[2758]::main), local_id: 457 }, kind: Path(Resolved(None, Path { span: src/main.rs:117:9: 117:15 (#0), res: Local(HirId { owner: DefId(0:21 ~ deer[2758]::main), local_id: 23 }), segments: [PathSegment { ident: window#0, hir_id: Some(HirId { owner: DefId(0:21 ~ deer[2758]::main), local_id: 456 }), res: Some(Local(HirId { owner: DefId(0:21 ~ deer[2758]::main), local_id: 23 })), args: None, infer_args: true }] })), span: src/main.rs:117:9: 117:15 (#0) }, can't compose [Borrow(Ref('_#136r, Not)) -> &Window] and [Borrow(Ref('_#138r, Not)) -> &Window]\r","query_stack":null}
{"message":"while adjusting Expr { hir_id: HirId { owner: DefId(0:28842 ~ avalon[de92]::ct::rx::continuous_rx), local_id: 1145 }, kind: Path(Resolved(None, Path { span: src/ct/rx.rs:301:29: 301:37 (#0), res: Local(HirId { owner: DefId(0:28842 ~ avalon[de92]::ct::rx::continuous_rx), local_id: 441 }), segments: [PathSegment { ident: snr_fifo#0, hir_id: Some(HirId { owner: DefId(0:28842 ~ avalon[de92]::ct::rx::continuous_rx), local_id: 1144 }), res: Some(Local(HirId { owner: DefId(0:28842 ~ avalon[de92]::ct::rx::continuous_rx), local_id: 441 })), args: None, infer_args: true }] })), span: src/ct/rx.rs:301:29: 301:37 (#0) }, can't compose [Borrow(Ref('_#345r, Not)) -> &[u32; 5]] and [Borrow(Ref('_#350r, Not)) -> &[u32; 5]]\r","query_stack":null}
{"message":"while adjusting Expr { hir_id: HirId { owner: DefId(0:3 ~ tryout[236d]::main), local_id: 7 }, kind: Lit(Spanned { node: Int(1, Unsuffixed), span: src/main.rs:2:8: 2:9 (#0) }), attrs: ThinVec(None), span: src/main.rs:2:8: 2:9 (#0) }, can't compose [Borrow(Ref('_#0r, Not)) -> &{integer}] and [Borrow(Ref('_#2r, Not)) -> &{integer}]\r","query_stack":null}
{"message":"while adjusting Expr { hir_id: HirId { owner: DefId(0:338 ~ allusion_proto[9561]::tree::{impl#0}::subtree), local_id: 44 }, kind: Path(Resolved(None, Path { span: src\\tree.rs:37:14: 37:18 (#0), res: Local(HirId { \r","query_stack":null}
{"message":"while adjusting Expr { hir_id: HirId { owner: DefId(0:4 ~ panicc[d4b8]::main), local_id: 67 }, kind: Call(Expr { hir_id: HirId { owner: DefId(0:4 ~ panicc[d4b8]::main), local_id: 65 }, kind: Path(TypeRelative(Ty { hir_id: HirId { owner: DefId(0:4 ~ panicc[d4b8]::main), local_id: 63 }, kind: Path(Resolved(None, Path { span: src\\main.rs:5:17: 5:25 (#0), res: Def(Struct, DefId(5:91 ~ alloc[730d]::boxed::Box)), segments: [PathSegment { ident: Box#0, hir_id: Some(HirId { owner: DefId(0:4 ~ panicc[d4b8]::main), local_id: 62 }), res: Some(Err), args: None, infer_args: true }] })), span: src\\main.rs:5:17: 5:25 (#0) }, PathSegment { ident: new#0, hir_id: Some(HirId { owner: DefId(0:4 ~ panicc[d4b8]::main), local_id: 64 }), res: Some(Err), args: None, infer_args: true })), attrs: ThinVec(None), span: src\\main.rs:5:17: 5:25 (#0) }, [Expr { hir_id: HirId { owner: DefId(0:4 ~ panicc[d4b8]::main), local_id: 66 }, kind: Lit(Spanned { node: Str(\"Go\", Cooked), span: src\\main.rs:5:26: 5:30 (#0) }), attrs: ThinVec(None), span: src\\main.rs:5:26: 5:30 (#0) }]), attrs: ThinVec(None), span: src\\main.rs:5:17: 5:31 (#0) }, can't compose [Borrow(Ref('_#19r, Not)) -> &Box<&str>] and [Borrow(Ref('_#24r, Not)) -> &Box<&str>]\r","query_stack":null}
{"message":"while adjusting Expr { hir_id: HirId { owner: DefId(0:4 ~ rustc_ice_2020_10_23[ee17]::main[0])\r","query_stack":null}
{"message":"while adjusting Expr { hir_id: HirId { owner: DefId(0:47 ~ codeforces[f0ea]::main::{impl#0}::create_snapshot), local_id: 7 }, kind: Path(Resolved(None, Path { span: src/main.rs:60:23: 60:27 (#0), res: Local(HirId { owner: DefId(0:47 ~ codeforces[f0ea]::main::{impl#0}::create_snapshot), local_id: 2 }), segments: [PathSegment { ident: self#0, hir_id: Some(HirId { owner: DefId(0:47 ~ codeforces[f0ea]::main::{impl#0}::create_snapshot), local_id: 6 }), res: Some(Local(HirId { owner: DefId(0:47 ~ codeforces[f0ea]::main::{impl#0}::create_snapshot), local_id: 2 })), args: None, infer_args: true }] })), span: src/main.rs:60:23: 60:27 (#0) }, can't compose [Borrow(Ref('_#0r, Not)) -> &&Person] and [Borrow(Ref('_#4r, Not)) -> &&Person]\r","query_stack":null}
{"message":"while adjusting Expr { hir_id: HirId { owner: DefId(0:47 ~ tetrust[1848]::{impl#1}::update), local_id: 14 }, kind: Path(Resolved(None, Path { span: src/main.rs:62:74: 62:78 (#0), res: Local(HirId { owner: DefId(0:47 ~ tetrust[1848]::{impl#1}::update), local_id: 2 }), segments: [PathSegment { ident: self#0, hir_id: Some(HirId { owner: DefId(0:47 ~ tetrust[1848]::{impl#1}::update), local_id: 13 }), res: Some(Local(HirId { owner: DefId(0:47 ~ tetrust[1848]::{impl#1}::update), local_id: 2 })), args: None, infer_args: true }] })), span: src/main.rs:62:74: 62:78 (#0) }, can't compose [Borrow(Ref('_#2r, Not)) -> &&Model] and [Borrow(Ref('_#6r, Not)) -> &&Model]\r","query_stack":null}
{"message":"while adjusting Expr { hir_id: HirId { owner: DefId(0:5 ~ pbm[38a7]::{impl#0}::y), local_id: 7 }, kind: Path(Resolved(None, Path { span: src/pbm.rs:9:43: 9:47 (#0), res: Local(HirId { owner: DefId(0:5 ~ pbm[38a7]::{impl#0}::y), local_id: 2 }), segments: [PathSegment { ident: self#0, hir_id: Some(HirId { owner: DefId(0:5 ~ pbm[38a7]::{impl#0}::y), local_id: 6 }), res: Some(Local(HirId { owner: DefId(0:5 ~ pbm[38a7]::{impl#0}::y), local_id: 2 })), args: None, infer_args: true }] })), span: src/pbm.rs:9:43: 9:47 (#0) }, can't compose [Borrow(Ref('_#0r, Not)) -> &&P<T>] and [Borrow(Ref('_#4r, Not)) -> &&P<T>]\r","query_stack":null}
{"message":"while adjusting Expr { hir_id: HirId { owner: DefId(0:5 ~ uuid_ice[56f1]::main), local_id: 24 }, kind: AddrOf(Ref, Not, Expr { hir_id: HirId { owner: DefId(0:5 ~ uuid_ice[56f1]::main), local_id: 23 }, kind: Path(Resolved(None, Path { span: src/main.rs:6:37: 6:39 (#0), res: Local(HirId { owner: DefId(0:5 ~ uuid_ice[56f1]::main), local_id: 2 }), segments: [PathSegment { ident: id#0, hir_id: Some(HirId { owner: DefId(0:5 ~ uuid_ice[56f1]::main), local_id: 22 }), res: Some(Local(HirId { owner: DefId(0:5 ~ uuid_ice[56f1]::main), local_id: 2 })), args: None, infer_args: true }] })), attrs: ThinVec(None), span: src/main.rs:6:37: 6:39 (#0) }), attrs: ThinVec(None), span: src/main.rs:6:36: 6:39 (#0) }, can't compose [Deref(None) -> &str, Deref(None) -> str, Borrow(Ref('_#4r, Not)) -> &str] and [Deref(None) -> &str, Deref(None) -> str, Borrow(Ref('_#8r, Not)) -> &str]\r","query_stack":null}
{"message":"while adjusting Expr { hir_id: HirId { owner: DefId(0:50 ~ ptranse[60bd]::process::process), local_id: 761 }, kind: MethodCall(PathSegment { ident: take#0, hir_id: Some(HirId { owner: DefId(0:50 ~ ptranse[60bd]::process::process), local_id: 755 }), res: Some(Err), args: None, infer_args: true }, [Expr { hir_id: HirId { owner: DefId(0:50 ~ ptranse[60bd]::process::process), local_id: 759 }, kind: MethodCall(PathSegment { ident: iter#0, hir_id: Some(HirId { owner: DefId(0:50 ~ ptranse[60bd]::process::process), local_id: 756 }), res: Some(Err), args: None, infer_args: true }, [Expr { hir_id: HirId { owner: DefId(0:50 ~ ptranse[60bd]::process::process), local_id: 758 }, kind: Path(Resolved(None, Path { span: src/process.rs:90:31: 90:32 (#0), res: Local(HirId { owner: DefId(0:50 ~ ptranse[60bd]::process::process), local_id: 748 }), segments: [PathSegment { ident: t#0, hir_id: Some(HirId { owner: DefId(0:50 ~ ptranse[60bd]::process::process), local_id: 757 }), res: Some(Local(HirId { owner: DefId(0:50 ~ ptranse[60bd]::process::process), local_id: 748 })), args: None, infer_args: true }] })), span: src/process.rs:90:31: 90:32 (#0) }], src/process.rs:90:33: 90:39 (#0)), span: src/process.rs:90:31: 90:39 (#0) }, Expr { hir_id: HirId { owner: DefId(0:50 ~ ptranse[60bd]::process::process), local_id: 760 }, kind: Lit(Spanned { node: Int(1, Unsuffixed), span: src/process.rs:90:45: 90:46 (#0) }), span: src/process.rs:90:45: 90:46 (#0) }], src/process.rs:90:40: 90:47 (#0)), span: src/process.rs:90:31: 90:47 (#0) }, can't compose [Borrow(Ref('_#440r, Mut { allow_two_phase_borrow: Yes })) -> &mut std::iter::Take<std::collections::hash_set::Iter<'_, &Triple<'_>>>] and [Borrow(Ref('_#454r, Mut { allow_two_phase_borrow: Yes })) -> &mut std::iter::Take<std::collections::hash_set::Iter<'_, &Triple<'_>>>]\r","query_stack":null}
{"message":"while adjusting Expr { hir_id: HirId { owner: DefId(0:6 ~ rust_clone_bug[fe18]::first_woman), local_id: 5 }, kind: Path(Resolved(None, Path { span: src/main.rs:10:11: 10:14 (#0), res: Local(HirId { owner: DefId(0:6 ~ rust_clone_bug[fe18]::first_woman), local_id: 2 }), segments: [PathSegment { ident: man#0, hir_id: Some(HirId { owner: DefId(0:6 ~ rust_clone_bug[fe18]::first_woman), local_id: 4 }), res: Some(Local(HirId { owner: DefId(0:6 ~ rust_clone_bug[fe18]::first_woman), local_id: 2 })), args: None, infer_args: true }] })), span: src/main.rs:10:11: 10:14 (#0) }, can't compose [Borrow(Ref('_#2r, Not)) -> &&Person] and [Borrow(Ref('_#6r, Not)) -> &&Person]\r","query_stack":null}
{"message":"while adjusting Expr { hir_id: HirId { owner: DefId(0:6 ~ test_hashmap[6477]::{impl#0}::received_bytes), local_id: 50 }, kind: Path(Resolved(None, Path { span: src/main.rs:19:25: 19:32 (#0), res: Local(HirId { owner: DefId(0:6 ~ test_hashmap[6477]::{impl#0}::received_bytes), local_id: 4 }), segments: [PathSegment { ident: mutable#0, hir_id: Some(HirId { owner: DefId(0:6 ~ test_hashmap[6477]::{impl#0}::received_bytes), local_id: 49 }), res: Some(Local(HirId { owner: DefId(0:6 ~ test_hashmap[6477]::{impl#0}::received_bytes), local_id: 4 })), args: None, infer_args: true }] })), attrs: ThinVec(None), span: src/main.rs:19:25: 19:32 (#0) }, can't compose [Deref(Some(OverloadedDeref { region: '_#6r, mutbl: Not, span: src/main.rs:19:25: 19:38 (#0) })) -> SomeMutableData] and [Deref(Some(OverloadedDeref { region: '_#13r, mutbl: Not, span: src/main.rs:19:25: 19:38 (#0) })) -> SomeMutableData]\r","query_stack":null}
{"message":"while adjusting Expr { hir_id: HirId { owner: DefId(0:7 ~ rust_ice_spread_ref[b86a]::main), local_id: 11 }, kind: Path(Resolved(None, Path { span: src/main.rs:13:20: 13:22 (#0), res: Local(HirId { owner: DefId(0:7 ~ rust_ice_spread_ref[b86a]::main), local_id: 7 }), segments: [PathSegment { ident: p0#0, hir_id: Some(HirId { owner: DefId(0:7 ~ rust_ice_spread_ref[b86a]::main), local_id: 10 }), res: Some(Local(HirId { owner: DefId(0:7 ~ rust_ice_spread_ref[b86a]::main), local_id: 7 })), args: None, infer_args: true }] })), span: src/main.rs:13:20: 13:22 (#0) }, can't compose [Borrow(Ref('_#0r, Not)) -> &P] and [Borrow(Ref('_#2r, Not)) -> &P]\r","query_stack":null}
{"message":"while adjusting Expr { hir_id: HirId { owner: DefId(0:8409 ~ otter[9ec0]::accounts::load_accounts), local_id: 241 }, kind: Path(Resolved(None, Path { span: src/accounts.rs:386:8: 386:18 (#0), res: Local(HirId { owner: DefId(0:8409 ~ otter[9ec0]::accounts::load_accounts), local_id: 18 }), segments: [PathSegment { ident: got_record#0, hir_id: Some(HirId { owner: DefId(0:8409 ~ otter[9ec0]::accounts::load_accounts), local_id: 240 }), res: Some(Local(HirId { owner: DefId(0:8409 ~ otter[9ec0]::accounts::load_accounts), local_id: 18 })), args: None, infer_args: true }] })), attrs: ThinVec(None), span: src/accounts.rs:386:8: 386:18 (#0) }, can't compose [Deref(None) -> accounts::AccountRecord] and [Deref(None) -> accounts::AccountRecord]\r","query_stack":null}
{"message":"while adjusting Expr { hir_id: HirId { owner: DefId(0:984 ~ cpclib_asm[cd45]::parser::parser::located_expr), local_id: 48 }, kind: Path(Resolved(None, Path { span: cpclib-asm/src/parser/parser.rs:3919:31: 3919:36 (#0), res: Local(HirId { owner: DefId(0:984 ~ cpclib_asm[cd45]::parser::parser::located_expr), local_id: 9 }), segments: [PathSegment { ident: start#0, hir_id: Some(HirId { owner: DefId(0:984 ~ cpclib_asm[cd45]::parser::parser::located_expr), local_id: 47 }), res: Some(Local(HirId { owner: DefId(0:984 ~ cpclib_asm[cd45]::parser::parser::located_expr), local_id: 9 })), args: None, infer_args: true }] })), span: cpclib-asm/src/parser/parser.rs:3919:31: 3919:36 (#0) }, can't compose [Borrow(Ref('_#2r, Not)) -> &source::Z80Span] and [Borrow(Ref('_#8r, Not)) -> &source::Z80Span]\r","query_stack":null}
{"message":"write_immediate_to_mplace: invalid ScalarPair layout: TyAndLayout {\r","query_stack":null}
